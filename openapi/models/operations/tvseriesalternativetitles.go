// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type TvSeriesAlternativeTitlesRequest struct {
	SeriesID int `pathParam:"style=simple,explode=false,name=series_id"`
}

func (o *TvSeriesAlternativeTitlesRequest) GetSeriesID() int {
	if o == nil {
		return 0
	}
	return o.SeriesID
}

type TvSeriesAlternativeTitles200ApplicationJSONResults struct {
	Iso31661 *string `json:"iso_3166_1,omitempty"`
	Title    *string `json:"title,omitempty"`
	Type     *string `json:"type,omitempty"`
}

func (o *TvSeriesAlternativeTitles200ApplicationJSONResults) GetIso31661() *string {
	if o == nil {
		return nil
	}
	return o.Iso31661
}

func (o *TvSeriesAlternativeTitles200ApplicationJSONResults) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *TvSeriesAlternativeTitles200ApplicationJSONResults) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

// TvSeriesAlternativeTitles200ApplicationJSON - 200
type TvSeriesAlternativeTitles200ApplicationJSON struct {
	ID      *int64                                               `default:"0" json:"id"`
	Results []TvSeriesAlternativeTitles200ApplicationJSONResults `json:"results,omitempty"`
}

func (t TvSeriesAlternativeTitles200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesAlternativeTitles200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesAlternativeTitles200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeriesAlternativeTitles200ApplicationJSON) GetResults() []TvSeriesAlternativeTitles200ApplicationJSONResults {
	if o == nil {
		return nil
	}
	return o.Results
}

type TvSeriesAlternativeTitlesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	TvSeriesAlternativeTitles200ApplicationJSONObject *TvSeriesAlternativeTitles200ApplicationJSON
}

func (o *TvSeriesAlternativeTitlesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TvSeriesAlternativeTitlesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TvSeriesAlternativeTitlesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TvSeriesAlternativeTitlesResponse) GetTvSeriesAlternativeTitles200ApplicationJSONObject() *TvSeriesAlternativeTitles200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.TvSeriesAlternativeTitles200ApplicationJSONObject
}
