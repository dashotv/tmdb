// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type NetworkDetailsRequest struct {
	NetworkID int `pathParam:"style=simple,explode=false,name=network_id"`
}

func (o *NetworkDetailsRequest) GetNetworkID() int {
	if o == nil {
		return 0
	}
	return o.NetworkID
}

// NetworkDetails200ApplicationJSON - 200
type NetworkDetails200ApplicationJSON struct {
	Headquarters  *string `json:"headquarters,omitempty"`
	Homepage      *string `json:"homepage,omitempty"`
	ID            *int64  `default:"0" json:"id"`
	LogoPath      *string `json:"logo_path,omitempty"`
	Name          *string `json:"name,omitempty"`
	OriginCountry *string `json:"origin_country,omitempty"`
}

func (n NetworkDetails200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(n, "", false)
}

func (n *NetworkDetails200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &n, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *NetworkDetails200ApplicationJSON) GetHeadquarters() *string {
	if o == nil {
		return nil
	}
	return o.Headquarters
}

func (o *NetworkDetails200ApplicationJSON) GetHomepage() *string {
	if o == nil {
		return nil
	}
	return o.Homepage
}

func (o *NetworkDetails200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *NetworkDetails200ApplicationJSON) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *NetworkDetails200ApplicationJSON) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *NetworkDetails200ApplicationJSON) GetOriginCountry() *string {
	if o == nil {
		return nil
	}
	return o.OriginCountry
}

type NetworkDetailsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	NetworkDetails200ApplicationJSONObject *NetworkDetails200ApplicationJSON
}

func (o *NetworkDetailsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *NetworkDetailsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *NetworkDetailsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *NetworkDetailsResponse) GetNetworkDetails200ApplicationJSONObject() *NetworkDetails200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.NetworkDetails200ApplicationJSONObject
}
