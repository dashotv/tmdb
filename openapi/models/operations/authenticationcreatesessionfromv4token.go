// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type AuthenticationCreateSessionFromV4TokenRequestBody struct {
	RawBody string `json:"RAW_BODY"`
}

func (o *AuthenticationCreateSessionFromV4TokenRequestBody) GetRawBody() string {
	if o == nil {
		return ""
	}
	return o.RawBody
}

// AuthenticationCreateSessionFromV4Token200ApplicationJSON - 200
type AuthenticationCreateSessionFromV4Token200ApplicationJSON struct {
	SessionID *string `json:"session_id,omitempty"`
	Success   *bool   `default:"true" json:"success"`
}

func (a AuthenticationCreateSessionFromV4Token200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AuthenticationCreateSessionFromV4Token200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AuthenticationCreateSessionFromV4Token200ApplicationJSON) GetSessionID() *string {
	if o == nil {
		return nil
	}
	return o.SessionID
}

func (o *AuthenticationCreateSessionFromV4Token200ApplicationJSON) GetSuccess() *bool {
	if o == nil {
		return nil
	}
	return o.Success
}

type AuthenticationCreateSessionFromV4TokenResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	AuthenticationCreateSessionFromV4Token200ApplicationJSONObject *AuthenticationCreateSessionFromV4Token200ApplicationJSON
}

func (o *AuthenticationCreateSessionFromV4TokenResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *AuthenticationCreateSessionFromV4TokenResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *AuthenticationCreateSessionFromV4TokenResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *AuthenticationCreateSessionFromV4TokenResponse) GetAuthenticationCreateSessionFromV4Token200ApplicationJSONObject() *AuthenticationCreateSessionFromV4Token200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.AuthenticationCreateSessionFromV4Token200ApplicationJSONObject
}
