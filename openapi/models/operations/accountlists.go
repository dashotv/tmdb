// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type AccountListsRequest struct {
	AccountID int     `default:"null" pathParam:"style=simple,explode=false,name=account_id"`
	Page      *int    `default:"1" queryParam:"style=form,explode=true,name=page"`
	SessionID *string `queryParam:"style=form,explode=true,name=session_id"`
}

func (a AccountListsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountListsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AccountListsRequest) GetAccountID() int {
	if o == nil {
		return 0
	}
	return o.AccountID
}

func (o *AccountListsRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *AccountListsRequest) GetSessionID() *string {
	if o == nil {
		return nil
	}
	return o.SessionID
}

type AccountLists200ApplicationJSONResults struct {
	Description   *string     `json:"description,omitempty"`
	FavoriteCount *int64      `default:"0" json:"favorite_count"`
	ID            *int64      `default:"0" json:"id"`
	Iso6391       *string     `json:"iso_639_1,omitempty"`
	ItemCount     *int64      `default:"0" json:"item_count"`
	ListType      *string     `json:"list_type,omitempty"`
	Name          *string     `json:"name,omitempty"`
	PosterPath    interface{} `json:"poster_path,omitempty"`
}

func (a AccountLists200ApplicationJSONResults) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountLists200ApplicationJSONResults) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AccountLists200ApplicationJSONResults) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *AccountLists200ApplicationJSONResults) GetFavoriteCount() *int64 {
	if o == nil {
		return nil
	}
	return o.FavoriteCount
}

func (o *AccountLists200ApplicationJSONResults) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AccountLists200ApplicationJSONResults) GetIso6391() *string {
	if o == nil {
		return nil
	}
	return o.Iso6391
}

func (o *AccountLists200ApplicationJSONResults) GetItemCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ItemCount
}

func (o *AccountLists200ApplicationJSONResults) GetListType() *string {
	if o == nil {
		return nil
	}
	return o.ListType
}

func (o *AccountLists200ApplicationJSONResults) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *AccountLists200ApplicationJSONResults) GetPosterPath() interface{} {
	if o == nil {
		return nil
	}
	return o.PosterPath
}

// AccountLists200ApplicationJSON - 200
type AccountLists200ApplicationJSON struct {
	Page         *int64                                  `default:"0" json:"page"`
	Results      []AccountLists200ApplicationJSONResults `json:"results,omitempty"`
	TotalPages   *int64                                  `default:"0" json:"total_pages"`
	TotalResults *int64                                  `default:"0" json:"total_results"`
}

func (a AccountLists200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountLists200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AccountLists200ApplicationJSON) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *AccountLists200ApplicationJSON) GetResults() []AccountLists200ApplicationJSONResults {
	if o == nil {
		return nil
	}
	return o.Results
}

func (o *AccountLists200ApplicationJSON) GetTotalPages() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalPages
}

func (o *AccountLists200ApplicationJSON) GetTotalResults() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalResults
}

type AccountListsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	AccountLists200ApplicationJSONObject *AccountLists200ApplicationJSON
}

func (o *AccountListsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *AccountListsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *AccountListsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *AccountListsResponse) GetAccountLists200ApplicationJSONObject() *AccountLists200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.AccountLists200ApplicationJSONObject
}
