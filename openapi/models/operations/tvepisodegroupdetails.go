// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type TvEpisodeGroupDetailsRequest struct {
	TvEpisodeGroupID string `pathParam:"style=simple,explode=false,name=tv_episode_group_id"`
}

func (o *TvEpisodeGroupDetailsRequest) GetTvEpisodeGroupID() string {
	if o == nil {
		return ""
	}
	return o.TvEpisodeGroupID
}

type TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes struct {
	AirDate        *string     `json:"air_date,omitempty"`
	EpisodeNumber  *int64      `default:"0" json:"episode_number"`
	ID             *int64      `default:"0" json:"id"`
	Name           *string     `json:"name,omitempty"`
	Order          *int64      `default:"0" json:"order"`
	Overview       *string     `json:"overview,omitempty"`
	ProductionCode *string     `json:"production_code,omitempty"`
	Runtime        interface{} `json:"runtime,omitempty"`
	SeasonNumber   *int64      `default:"0" json:"season_number"`
	ShowID         *int64      `default:"0" json:"show_id"`
	StillPath      *string     `json:"still_path,omitempty"`
	VoteAverage    *float64    `default:"0" json:"vote_average"`
	VoteCount      *int64      `default:"0" json:"vote_count"`
}

func (t TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetAirDate() *string {
	if o == nil {
		return nil
	}
	return o.AirDate
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetEpisodeNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.EpisodeNumber
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetOverview() *string {
	if o == nil {
		return nil
	}
	return o.Overview
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetProductionCode() *string {
	if o == nil {
		return nil
	}
	return o.ProductionCode
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetRuntime() interface{} {
	if o == nil {
		return nil
	}
	return o.Runtime
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetSeasonNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.SeasonNumber
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetShowID() *int64 {
	if o == nil {
		return nil
	}
	return o.ShowID
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetStillPath() *string {
	if o == nil {
		return nil
	}
	return o.StillPath
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetVoteAverage() *float64 {
	if o == nil {
		return nil
	}
	return o.VoteAverage
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes) GetVoteCount() *int64 {
	if o == nil {
		return nil
	}
	return o.VoteCount
}

type TvEpisodeGroupDetails200ApplicationJSONGroups struct {
	Episodes []TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes `json:"episodes,omitempty"`
	ID       *string                                                 `json:"id,omitempty"`
	Locked   *bool                                                   `default:"true" json:"locked"`
	Name     *string                                                 `json:"name,omitempty"`
	Order    *int64                                                  `default:"0" json:"order"`
}

func (t TvEpisodeGroupDetails200ApplicationJSONGroups) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvEpisodeGroupDetails200ApplicationJSONGroups) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroups) GetEpisodes() []TvEpisodeGroupDetails200ApplicationJSONGroupsEpisodes {
	if o == nil {
		return nil
	}
	return o.Episodes
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroups) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroups) GetLocked() *bool {
	if o == nil {
		return nil
	}
	return o.Locked
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroups) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TvEpisodeGroupDetails200ApplicationJSONGroups) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type TvEpisodeGroupDetails200ApplicationJSONNetwork struct {
	ID            *int64  `default:"0" json:"id"`
	LogoPath      *string `json:"logo_path,omitempty"`
	Name          *string `json:"name,omitempty"`
	OriginCountry *string `json:"origin_country,omitempty"`
}

func (t TvEpisodeGroupDetails200ApplicationJSONNetwork) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvEpisodeGroupDetails200ApplicationJSONNetwork) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvEpisodeGroupDetails200ApplicationJSONNetwork) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvEpisodeGroupDetails200ApplicationJSONNetwork) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvEpisodeGroupDetails200ApplicationJSONNetwork) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TvEpisodeGroupDetails200ApplicationJSONNetwork) GetOriginCountry() *string {
	if o == nil {
		return nil
	}
	return o.OriginCountry
}

// TvEpisodeGroupDetails200ApplicationJSON - 200
type TvEpisodeGroupDetails200ApplicationJSON struct {
	Description  *string                                         `json:"description,omitempty"`
	EpisodeCount *int64                                          `default:"0" json:"episode_count"`
	GroupCount   *int64                                          `default:"0" json:"group_count"`
	Groups       []TvEpisodeGroupDetails200ApplicationJSONGroups `json:"groups,omitempty"`
	ID           *string                                         `json:"id,omitempty"`
	Name         *string                                         `json:"name,omitempty"`
	Network      *TvEpisodeGroupDetails200ApplicationJSONNetwork `json:"network,omitempty"`
	Type         *int64                                          `default:"0" json:"type"`
}

func (t TvEpisodeGroupDetails200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvEpisodeGroupDetails200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvEpisodeGroupDetails200ApplicationJSON) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *TvEpisodeGroupDetails200ApplicationJSON) GetEpisodeCount() *int64 {
	if o == nil {
		return nil
	}
	return o.EpisodeCount
}

func (o *TvEpisodeGroupDetails200ApplicationJSON) GetGroupCount() *int64 {
	if o == nil {
		return nil
	}
	return o.GroupCount
}

func (o *TvEpisodeGroupDetails200ApplicationJSON) GetGroups() []TvEpisodeGroupDetails200ApplicationJSONGroups {
	if o == nil {
		return nil
	}
	return o.Groups
}

func (o *TvEpisodeGroupDetails200ApplicationJSON) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvEpisodeGroupDetails200ApplicationJSON) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TvEpisodeGroupDetails200ApplicationJSON) GetNetwork() *TvEpisodeGroupDetails200ApplicationJSONNetwork {
	if o == nil {
		return nil
	}
	return o.Network
}

func (o *TvEpisodeGroupDetails200ApplicationJSON) GetType() *int64 {
	if o == nil {
		return nil
	}
	return o.Type
}

type TvEpisodeGroupDetailsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	TvEpisodeGroupDetails200ApplicationJSONObject *TvEpisodeGroupDetails200ApplicationJSON
}

func (o *TvEpisodeGroupDetailsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TvEpisodeGroupDetailsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TvEpisodeGroupDetailsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TvEpisodeGroupDetailsResponse) GetTvEpisodeGroupDetails200ApplicationJSONObject() *TvEpisodeGroupDetails200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.TvEpisodeGroupDetails200ApplicationJSONObject
}
