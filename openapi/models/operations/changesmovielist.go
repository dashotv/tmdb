// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/types"
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type ChangesMovieListRequest struct {
	EndDate   *types.Date `queryParam:"style=form,explode=true,name=end_date"`
	Page      *int        `default:"1" queryParam:"style=form,explode=true,name=page"`
	StartDate *types.Date `queryParam:"style=form,explode=true,name=start_date"`
}

func (c ChangesMovieListRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ChangesMovieListRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ChangesMovieListRequest) GetEndDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *ChangesMovieListRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ChangesMovieListRequest) GetStartDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.StartDate
}

type ChangesMovieList200ApplicationJSONResults struct {
	Adult *bool  `default:"true" json:"adult"`
	ID    *int64 `default:"0" json:"id"`
}

func (c ChangesMovieList200ApplicationJSONResults) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ChangesMovieList200ApplicationJSONResults) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ChangesMovieList200ApplicationJSONResults) GetAdult() *bool {
	if o == nil {
		return nil
	}
	return o.Adult
}

func (o *ChangesMovieList200ApplicationJSONResults) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

// ChangesMovieList200ApplicationJSON - 200
type ChangesMovieList200ApplicationJSON struct {
	Page         *int64                                      `default:"0" json:"page"`
	Results      []ChangesMovieList200ApplicationJSONResults `json:"results,omitempty"`
	TotalPages   *int64                                      `default:"0" json:"total_pages"`
	TotalResults *int64                                      `default:"0" json:"total_results"`
}

func (c ChangesMovieList200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ChangesMovieList200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ChangesMovieList200ApplicationJSON) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ChangesMovieList200ApplicationJSON) GetResults() []ChangesMovieList200ApplicationJSONResults {
	if o == nil {
		return nil
	}
	return o.Results
}

func (o *ChangesMovieList200ApplicationJSON) GetTotalPages() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalPages
}

func (o *ChangesMovieList200ApplicationJSON) GetTotalResults() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalResults
}

type ChangesMovieListResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	ChangesMovieList200ApplicationJSONObject *ChangesMovieList200ApplicationJSON
}

func (o *ChangesMovieListResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ChangesMovieListResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ChangesMovieListResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ChangesMovieListResponse) GetChangesMovieList200ApplicationJSONObject() *ChangesMovieList200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.ChangesMovieList200ApplicationJSONObject
}
