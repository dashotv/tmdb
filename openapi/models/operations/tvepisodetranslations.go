// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type TvEpisodeTranslationsRequest struct {
	EpisodeNumber int `pathParam:"style=simple,explode=false,name=episode_number"`
	SeasonNumber  int `pathParam:"style=simple,explode=false,name=season_number"`
	SeriesID      int `pathParam:"style=simple,explode=false,name=series_id"`
}

func (o *TvEpisodeTranslationsRequest) GetEpisodeNumber() int {
	if o == nil {
		return 0
	}
	return o.EpisodeNumber
}

func (o *TvEpisodeTranslationsRequest) GetSeasonNumber() int {
	if o == nil {
		return 0
	}
	return o.SeasonNumber
}

func (o *TvEpisodeTranslationsRequest) GetSeriesID() int {
	if o == nil {
		return 0
	}
	return o.SeriesID
}

type TvEpisodeTranslations200ApplicationJSONTranslationsData struct {
	Name     *string `json:"name,omitempty"`
	Overview *string `json:"overview,omitempty"`
}

func (o *TvEpisodeTranslations200ApplicationJSONTranslationsData) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TvEpisodeTranslations200ApplicationJSONTranslationsData) GetOverview() *string {
	if o == nil {
		return nil
	}
	return o.Overview
}

type TvEpisodeTranslations200ApplicationJSONTranslations struct {
	Data        *TvEpisodeTranslations200ApplicationJSONTranslationsData `json:"data,omitempty"`
	EnglishName *string                                                  `json:"english_name,omitempty"`
	Iso31661    *string                                                  `json:"iso_3166_1,omitempty"`
	Iso6391     *string                                                  `json:"iso_639_1,omitempty"`
	Name        *string                                                  `json:"name,omitempty"`
}

func (o *TvEpisodeTranslations200ApplicationJSONTranslations) GetData() *TvEpisodeTranslations200ApplicationJSONTranslationsData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *TvEpisodeTranslations200ApplicationJSONTranslations) GetEnglishName() *string {
	if o == nil {
		return nil
	}
	return o.EnglishName
}

func (o *TvEpisodeTranslations200ApplicationJSONTranslations) GetIso31661() *string {
	if o == nil {
		return nil
	}
	return o.Iso31661
}

func (o *TvEpisodeTranslations200ApplicationJSONTranslations) GetIso6391() *string {
	if o == nil {
		return nil
	}
	return o.Iso6391
}

func (o *TvEpisodeTranslations200ApplicationJSONTranslations) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// TvEpisodeTranslations200ApplicationJSON - 200
type TvEpisodeTranslations200ApplicationJSON struct {
	ID           *int64                                                `default:"0" json:"id"`
	Translations []TvEpisodeTranslations200ApplicationJSONTranslations `json:"translations,omitempty"`
}

func (t TvEpisodeTranslations200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvEpisodeTranslations200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvEpisodeTranslations200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvEpisodeTranslations200ApplicationJSON) GetTranslations() []TvEpisodeTranslations200ApplicationJSONTranslations {
	if o == nil {
		return nil
	}
	return o.Translations
}

type TvEpisodeTranslationsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	TvEpisodeTranslations200ApplicationJSONObject *TvEpisodeTranslations200ApplicationJSON
}

func (o *TvEpisodeTranslationsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TvEpisodeTranslationsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TvEpisodeTranslationsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TvEpisodeTranslationsResponse) GetTvEpisodeTranslations200ApplicationJSONObject() *TvEpisodeTranslations200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.TvEpisodeTranslations200ApplicationJSONObject
}
