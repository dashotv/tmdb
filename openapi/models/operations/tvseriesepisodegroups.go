// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type TvSeriesEpisodeGroupsRequest struct {
	SeriesID int `pathParam:"style=simple,explode=false,name=series_id"`
}

func (o *TvSeriesEpisodeGroupsRequest) GetSeriesID() int {
	if o == nil {
		return 0
	}
	return o.SeriesID
}

type TvSeriesEpisodeGroups200ApplicationJSONResultsNetwork struct {
	ID            *int64  `default:"0" json:"id"`
	LogoPath      *string `json:"logo_path,omitempty"`
	Name          *string `json:"name,omitempty"`
	OriginCountry *string `json:"origin_country,omitempty"`
}

func (t TvSeriesEpisodeGroups200ApplicationJSONResultsNetwork) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesEpisodeGroups200ApplicationJSONResultsNetwork) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesEpisodeGroups200ApplicationJSONResultsNetwork) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeriesEpisodeGroups200ApplicationJSONResultsNetwork) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesEpisodeGroups200ApplicationJSONResultsNetwork) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TvSeriesEpisodeGroups200ApplicationJSONResultsNetwork) GetOriginCountry() *string {
	if o == nil {
		return nil
	}
	return o.OriginCountry
}

type TvSeriesEpisodeGroups200ApplicationJSONResults struct {
	Description  *string                                                `json:"description,omitempty"`
	EpisodeCount *int64                                                 `default:"0" json:"episode_count"`
	GroupCount   *int64                                                 `default:"0" json:"group_count"`
	ID           *string                                                `json:"id,omitempty"`
	Name         *string                                                `json:"name,omitempty"`
	Network      *TvSeriesEpisodeGroups200ApplicationJSONResultsNetwork `json:"network,omitempty"`
	Type         *int64                                                 `default:"0" json:"type"`
}

func (t TvSeriesEpisodeGroups200ApplicationJSONResults) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesEpisodeGroups200ApplicationJSONResults) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesEpisodeGroups200ApplicationJSONResults) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *TvSeriesEpisodeGroups200ApplicationJSONResults) GetEpisodeCount() *int64 {
	if o == nil {
		return nil
	}
	return o.EpisodeCount
}

func (o *TvSeriesEpisodeGroups200ApplicationJSONResults) GetGroupCount() *int64 {
	if o == nil {
		return nil
	}
	return o.GroupCount
}

func (o *TvSeriesEpisodeGroups200ApplicationJSONResults) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeriesEpisodeGroups200ApplicationJSONResults) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TvSeriesEpisodeGroups200ApplicationJSONResults) GetNetwork() *TvSeriesEpisodeGroups200ApplicationJSONResultsNetwork {
	if o == nil {
		return nil
	}
	return o.Network
}

func (o *TvSeriesEpisodeGroups200ApplicationJSONResults) GetType() *int64 {
	if o == nil {
		return nil
	}
	return o.Type
}

// TvSeriesEpisodeGroups200ApplicationJSON - 200
type TvSeriesEpisodeGroups200ApplicationJSON struct {
	ID      *int64                                           `default:"0" json:"id"`
	Results []TvSeriesEpisodeGroups200ApplicationJSONResults `json:"results,omitempty"`
}

func (t TvSeriesEpisodeGroups200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesEpisodeGroups200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesEpisodeGroups200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeriesEpisodeGroups200ApplicationJSON) GetResults() []TvSeriesEpisodeGroups200ApplicationJSONResults {
	if o == nil {
		return nil
	}
	return o.Results
}

type TvSeriesEpisodeGroupsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	TvSeriesEpisodeGroups200ApplicationJSONObject *TvSeriesEpisodeGroups200ApplicationJSON
}

func (o *TvSeriesEpisodeGroupsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TvSeriesEpisodeGroupsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TvSeriesEpisodeGroupsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TvSeriesEpisodeGroupsResponse) GetTvSeriesEpisodeGroups200ApplicationJSONObject() *TvSeriesEpisodeGroups200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.TvSeriesEpisodeGroups200ApplicationJSONObject
}
