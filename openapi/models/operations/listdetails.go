// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type ListDetailsRequest struct {
	ListID   int     `pathParam:"style=simple,explode=false,name=list_id"`
	Language *string `default:"en-US" queryParam:"style=form,explode=true,name=language"`
}

func (l ListDetailsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListDetailsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListDetailsRequest) GetListID() int {
	if o == nil {
		return 0
	}
	return o.ListID
}

func (o *ListDetailsRequest) GetLanguage() *string {
	if o == nil {
		return nil
	}
	return o.Language
}

type ListDetails200ApplicationJSONItems struct {
	Adult            *bool    `default:"true" json:"adult"`
	BackdropPath     *string  `json:"backdrop_path,omitempty"`
	GenreIds         []int64  `json:"genre_ids,omitempty"`
	ID               *int64   `default:"0" json:"id"`
	MediaType        *string  `json:"media_type,omitempty"`
	OriginalLanguage *string  `json:"original_language,omitempty"`
	OriginalTitle    *string  `json:"original_title,omitempty"`
	Overview         *string  `json:"overview,omitempty"`
	Popularity       *float64 `default:"0" json:"popularity"`
	PosterPath       *string  `json:"poster_path,omitempty"`
	ReleaseDate      *string  `json:"release_date,omitempty"`
	Title            *string  `json:"title,omitempty"`
	Video            *bool    `default:"true" json:"video"`
	VoteAverage      *int64   `default:"0" json:"vote_average"`
	VoteCount        *int64   `default:"0" json:"vote_count"`
}

func (l ListDetails200ApplicationJSONItems) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListDetails200ApplicationJSONItems) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListDetails200ApplicationJSONItems) GetAdult() *bool {
	if o == nil {
		return nil
	}
	return o.Adult
}

func (o *ListDetails200ApplicationJSONItems) GetBackdropPath() *string {
	if o == nil {
		return nil
	}
	return o.BackdropPath
}

func (o *ListDetails200ApplicationJSONItems) GetGenreIds() []int64 {
	if o == nil {
		return nil
	}
	return o.GenreIds
}

func (o *ListDetails200ApplicationJSONItems) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ListDetails200ApplicationJSONItems) GetMediaType() *string {
	if o == nil {
		return nil
	}
	return o.MediaType
}

func (o *ListDetails200ApplicationJSONItems) GetOriginalLanguage() *string {
	if o == nil {
		return nil
	}
	return o.OriginalLanguage
}

func (o *ListDetails200ApplicationJSONItems) GetOriginalTitle() *string {
	if o == nil {
		return nil
	}
	return o.OriginalTitle
}

func (o *ListDetails200ApplicationJSONItems) GetOverview() *string {
	if o == nil {
		return nil
	}
	return o.Overview
}

func (o *ListDetails200ApplicationJSONItems) GetPopularity() *float64 {
	if o == nil {
		return nil
	}
	return o.Popularity
}

func (o *ListDetails200ApplicationJSONItems) GetPosterPath() *string {
	if o == nil {
		return nil
	}
	return o.PosterPath
}

func (o *ListDetails200ApplicationJSONItems) GetReleaseDate() *string {
	if o == nil {
		return nil
	}
	return o.ReleaseDate
}

func (o *ListDetails200ApplicationJSONItems) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *ListDetails200ApplicationJSONItems) GetVideo() *bool {
	if o == nil {
		return nil
	}
	return o.Video
}

func (o *ListDetails200ApplicationJSONItems) GetVoteAverage() *int64 {
	if o == nil {
		return nil
	}
	return o.VoteAverage
}

func (o *ListDetails200ApplicationJSONItems) GetVoteCount() *int64 {
	if o == nil {
		return nil
	}
	return o.VoteCount
}

// ListDetails200ApplicationJSON - 200
type ListDetails200ApplicationJSON struct {
	CreatedBy     *string                              `json:"created_by,omitempty"`
	Description   *string                              `json:"description,omitempty"`
	FavoriteCount *int64                               `default:"0" json:"favorite_count"`
	ID            *string                              `json:"id,omitempty"`
	Iso6391       *string                              `json:"iso_639_1,omitempty"`
	ItemCount     *int64                               `default:"0" json:"item_count"`
	Items         []ListDetails200ApplicationJSONItems `json:"items,omitempty"`
	Name          *string                              `json:"name,omitempty"`
	PosterPath    *string                              `json:"poster_path,omitempty"`
}

func (l ListDetails200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListDetails200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListDetails200ApplicationJSON) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *ListDetails200ApplicationJSON) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ListDetails200ApplicationJSON) GetFavoriteCount() *int64 {
	if o == nil {
		return nil
	}
	return o.FavoriteCount
}

func (o *ListDetails200ApplicationJSON) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ListDetails200ApplicationJSON) GetIso6391() *string {
	if o == nil {
		return nil
	}
	return o.Iso6391
}

func (o *ListDetails200ApplicationJSON) GetItemCount() *int64 {
	if o == nil {
		return nil
	}
	return o.ItemCount
}

func (o *ListDetails200ApplicationJSON) GetItems() []ListDetails200ApplicationJSONItems {
	if o == nil {
		return nil
	}
	return o.Items
}

func (o *ListDetails200ApplicationJSON) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListDetails200ApplicationJSON) GetPosterPath() *string {
	if o == nil {
		return nil
	}
	return o.PosterPath
}

type ListDetailsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	ListDetails200ApplicationJSONObject *ListDetails200ApplicationJSON
}

func (o *ListDetailsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListDetailsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListDetailsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListDetailsResponse) GetListDetails200ApplicationJSONObject() *ListDetails200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.ListDetails200ApplicationJSONObject
}
