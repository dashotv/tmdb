// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type MovieAccountStatesRequest struct {
	MovieID        int     `pathParam:"style=simple,explode=false,name=movie_id"`
	GuestSessionID *string `queryParam:"style=form,explode=true,name=guest_session_id"`
	SessionID      *string `queryParam:"style=form,explode=true,name=session_id"`
}

func (o *MovieAccountStatesRequest) GetMovieID() int {
	if o == nil {
		return 0
	}
	return o.MovieID
}

func (o *MovieAccountStatesRequest) GetGuestSessionID() *string {
	if o == nil {
		return nil
	}
	return o.GuestSessionID
}

func (o *MovieAccountStatesRequest) GetSessionID() *string {
	if o == nil {
		return nil
	}
	return o.SessionID
}

type MovieAccountStates200ApplicationJSONRated struct {
	Value *int64 `default:"0" json:"value"`
}

func (m MovieAccountStates200ApplicationJSONRated) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieAccountStates200ApplicationJSONRated) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieAccountStates200ApplicationJSONRated) GetValue() *int64 {
	if o == nil {
		return nil
	}
	return o.Value
}

// MovieAccountStates200ApplicationJSON - 200
type MovieAccountStates200ApplicationJSON struct {
	Favorite  *bool                                      `default:"true" json:"favorite"`
	ID        *int64                                     `default:"0" json:"id"`
	Rated     *MovieAccountStates200ApplicationJSONRated `json:"rated,omitempty"`
	Watchlist *bool                                      `default:"true" json:"watchlist"`
}

func (m MovieAccountStates200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieAccountStates200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieAccountStates200ApplicationJSON) GetFavorite() *bool {
	if o == nil {
		return nil
	}
	return o.Favorite
}

func (o *MovieAccountStates200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MovieAccountStates200ApplicationJSON) GetRated() *MovieAccountStates200ApplicationJSONRated {
	if o == nil {
		return nil
	}
	return o.Rated
}

func (o *MovieAccountStates200ApplicationJSON) GetWatchlist() *bool {
	if o == nil {
		return nil
	}
	return o.Watchlist
}

type MovieAccountStatesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	MovieAccountStates200ApplicationJSONObject *MovieAccountStates200ApplicationJSON
}

func (o *MovieAccountStatesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *MovieAccountStatesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *MovieAccountStatesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *MovieAccountStatesResponse) GetMovieAccountStates200ApplicationJSONObject() *MovieAccountStates200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.MovieAccountStates200ApplicationJSONObject
}
