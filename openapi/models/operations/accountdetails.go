// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type AccountDetailsRequest struct {
	AccountID int     `default:"null" pathParam:"style=simple,explode=false,name=account_id"`
	SessionID *string `queryParam:"style=form,explode=true,name=session_id"`
}

func (a AccountDetailsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountDetailsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AccountDetailsRequest) GetAccountID() int {
	if o == nil {
		return 0
	}
	return o.AccountID
}

func (o *AccountDetailsRequest) GetSessionID() *string {
	if o == nil {
		return nil
	}
	return o.SessionID
}

type AccountDetails200ApplicationJSONAvatarGravatar struct {
	Hash *string `json:"hash,omitempty"`
}

func (o *AccountDetails200ApplicationJSONAvatarGravatar) GetHash() *string {
	if o == nil {
		return nil
	}
	return o.Hash
}

type AccountDetails200ApplicationJSONAvatarTmdb struct {
	AvatarPath *string `json:"avatar_path,omitempty"`
}

func (o *AccountDetails200ApplicationJSONAvatarTmdb) GetAvatarPath() *string {
	if o == nil {
		return nil
	}
	return o.AvatarPath
}

type AccountDetails200ApplicationJSONAvatar struct {
	Gravatar *AccountDetails200ApplicationJSONAvatarGravatar `json:"gravatar,omitempty"`
	Tmdb     *AccountDetails200ApplicationJSONAvatarTmdb     `json:"tmdb,omitempty"`
}

func (o *AccountDetails200ApplicationJSONAvatar) GetGravatar() *AccountDetails200ApplicationJSONAvatarGravatar {
	if o == nil {
		return nil
	}
	return o.Gravatar
}

func (o *AccountDetails200ApplicationJSONAvatar) GetTmdb() *AccountDetails200ApplicationJSONAvatarTmdb {
	if o == nil {
		return nil
	}
	return o.Tmdb
}

// AccountDetails200ApplicationJSON - 200
type AccountDetails200ApplicationJSON struct {
	Avatar       *AccountDetails200ApplicationJSONAvatar `json:"avatar,omitempty"`
	ID           *int64                                  `default:"0" json:"id"`
	IncludeAdult *bool                                   `default:"true" json:"include_adult"`
	Iso31661     *string                                 `json:"iso_3166_1,omitempty"`
	Iso6391      *string                                 `json:"iso_639_1,omitempty"`
	Name         *string                                 `json:"name,omitempty"`
	Username     *string                                 `json:"username,omitempty"`
}

func (a AccountDetails200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountDetails200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AccountDetails200ApplicationJSON) GetAvatar() *AccountDetails200ApplicationJSONAvatar {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *AccountDetails200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AccountDetails200ApplicationJSON) GetIncludeAdult() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeAdult
}

func (o *AccountDetails200ApplicationJSON) GetIso31661() *string {
	if o == nil {
		return nil
	}
	return o.Iso31661
}

func (o *AccountDetails200ApplicationJSON) GetIso6391() *string {
	if o == nil {
		return nil
	}
	return o.Iso6391
}

func (o *AccountDetails200ApplicationJSON) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *AccountDetails200ApplicationJSON) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

type AccountDetailsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	AccountDetails200ApplicationJSONObject *AccountDetails200ApplicationJSON
}

func (o *AccountDetailsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *AccountDetailsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *AccountDetailsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *AccountDetailsResponse) GetAccountDetails200ApplicationJSONObject() *AccountDetails200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.AccountDetails200ApplicationJSONObject
}
