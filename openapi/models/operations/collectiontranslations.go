// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type CollectionTranslationsRequest struct {
	CollectionID int `pathParam:"style=simple,explode=false,name=collection_id"`
}

func (o *CollectionTranslationsRequest) GetCollectionID() int {
	if o == nil {
		return 0
	}
	return o.CollectionID
}

type CollectionTranslations200ApplicationJSONTranslationsData struct {
	Homepage *string `json:"homepage,omitempty"`
	Overview *string `json:"overview,omitempty"`
	Title    *string `json:"title,omitempty"`
}

func (o *CollectionTranslations200ApplicationJSONTranslationsData) GetHomepage() *string {
	if o == nil {
		return nil
	}
	return o.Homepage
}

func (o *CollectionTranslations200ApplicationJSONTranslationsData) GetOverview() *string {
	if o == nil {
		return nil
	}
	return o.Overview
}

func (o *CollectionTranslations200ApplicationJSONTranslationsData) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

type CollectionTranslations200ApplicationJSONTranslations struct {
	Data        *CollectionTranslations200ApplicationJSONTranslationsData `json:"data,omitempty"`
	EnglishName *string                                                   `json:"english_name,omitempty"`
	Iso31661    *string                                                   `json:"iso_3166_1,omitempty"`
	Iso6391     *string                                                   `json:"iso_639_1,omitempty"`
	Name        *string                                                   `json:"name,omitempty"`
}

func (o *CollectionTranslations200ApplicationJSONTranslations) GetData() *CollectionTranslations200ApplicationJSONTranslationsData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *CollectionTranslations200ApplicationJSONTranslations) GetEnglishName() *string {
	if o == nil {
		return nil
	}
	return o.EnglishName
}

func (o *CollectionTranslations200ApplicationJSONTranslations) GetIso31661() *string {
	if o == nil {
		return nil
	}
	return o.Iso31661
}

func (o *CollectionTranslations200ApplicationJSONTranslations) GetIso6391() *string {
	if o == nil {
		return nil
	}
	return o.Iso6391
}

func (o *CollectionTranslations200ApplicationJSONTranslations) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// CollectionTranslations200ApplicationJSON - 200
type CollectionTranslations200ApplicationJSON struct {
	ID           *int64                                                 `default:"0" json:"id"`
	Translations []CollectionTranslations200ApplicationJSONTranslations `json:"translations,omitempty"`
}

func (c CollectionTranslations200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CollectionTranslations200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CollectionTranslations200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CollectionTranslations200ApplicationJSON) GetTranslations() []CollectionTranslations200ApplicationJSONTranslations {
	if o == nil {
		return nil
	}
	return o.Translations
}

type CollectionTranslationsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	CollectionTranslations200ApplicationJSONObject *CollectionTranslations200ApplicationJSON
}

func (o *CollectionTranslationsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CollectionTranslationsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CollectionTranslationsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CollectionTranslationsResponse) GetCollectionTranslations200ApplicationJSONObject() *CollectionTranslations200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.CollectionTranslations200ApplicationJSONObject
}
