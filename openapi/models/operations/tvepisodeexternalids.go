// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type TvEpisodeExternalIdsRequest struct {
	EpisodeNumber string `pathParam:"style=simple,explode=false,name=episode_number"`
	SeasonNumber  int    `pathParam:"style=simple,explode=false,name=season_number"`
	SeriesID      int    `pathParam:"style=simple,explode=false,name=series_id"`
}

func (o *TvEpisodeExternalIdsRequest) GetEpisodeNumber() string {
	if o == nil {
		return ""
	}
	return o.EpisodeNumber
}

func (o *TvEpisodeExternalIdsRequest) GetSeasonNumber() int {
	if o == nil {
		return 0
	}
	return o.SeasonNumber
}

func (o *TvEpisodeExternalIdsRequest) GetSeriesID() int {
	if o == nil {
		return 0
	}
	return o.SeriesID
}

// TvEpisodeExternalIds200ApplicationJSON - 200
type TvEpisodeExternalIds200ApplicationJSON struct {
	FreebaseID  *string `json:"freebase_id,omitempty"`
	FreebaseMid *string `json:"freebase_mid,omitempty"`
	ID          *int64  `default:"0" json:"id"`
	ImdbID      *string `json:"imdb_id,omitempty"`
	TvdbID      *int64  `default:"0" json:"tvdb_id"`
	TvrageID    *int64  `default:"0" json:"tvrage_id"`
	WikidataID  *string `json:"wikidata_id,omitempty"`
}

func (t TvEpisodeExternalIds200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvEpisodeExternalIds200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvEpisodeExternalIds200ApplicationJSON) GetFreebaseID() *string {
	if o == nil {
		return nil
	}
	return o.FreebaseID
}

func (o *TvEpisodeExternalIds200ApplicationJSON) GetFreebaseMid() *string {
	if o == nil {
		return nil
	}
	return o.FreebaseMid
}

func (o *TvEpisodeExternalIds200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvEpisodeExternalIds200ApplicationJSON) GetImdbID() *string {
	if o == nil {
		return nil
	}
	return o.ImdbID
}

func (o *TvEpisodeExternalIds200ApplicationJSON) GetTvdbID() *int64 {
	if o == nil {
		return nil
	}
	return o.TvdbID
}

func (o *TvEpisodeExternalIds200ApplicationJSON) GetTvrageID() *int64 {
	if o == nil {
		return nil
	}
	return o.TvrageID
}

func (o *TvEpisodeExternalIds200ApplicationJSON) GetWikidataID() *string {
	if o == nil {
		return nil
	}
	return o.WikidataID
}

type TvEpisodeExternalIdsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	TvEpisodeExternalIds200ApplicationJSONObject *TvEpisodeExternalIds200ApplicationJSON
}

func (o *TvEpisodeExternalIdsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TvEpisodeExternalIdsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TvEpisodeExternalIdsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TvEpisodeExternalIdsResponse) GetTvEpisodeExternalIds200ApplicationJSONObject() *TvEpisodeExternalIds200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.TvEpisodeExternalIds200ApplicationJSONObject
}
