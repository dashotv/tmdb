// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type TvSeriesContentRatingsRequest struct {
	SeriesID int `pathParam:"style=simple,explode=false,name=series_id"`
}

func (o *TvSeriesContentRatingsRequest) GetSeriesID() int {
	if o == nil {
		return 0
	}
	return o.SeriesID
}

type TvSeriesContentRatings200ApplicationJSONResults struct {
	Descriptors []interface{} `json:"descriptors,omitempty"`
	Iso31661    *string       `json:"iso_3166_1,omitempty"`
	Rating      *string       `json:"rating,omitempty"`
}

func (o *TvSeriesContentRatings200ApplicationJSONResults) GetDescriptors() []interface{} {
	if o == nil {
		return nil
	}
	return o.Descriptors
}

func (o *TvSeriesContentRatings200ApplicationJSONResults) GetIso31661() *string {
	if o == nil {
		return nil
	}
	return o.Iso31661
}

func (o *TvSeriesContentRatings200ApplicationJSONResults) GetRating() *string {
	if o == nil {
		return nil
	}
	return o.Rating
}

// TvSeriesContentRatings200ApplicationJSON - 200
type TvSeriesContentRatings200ApplicationJSON struct {
	ID      *int64                                            `default:"0" json:"id"`
	Results []TvSeriesContentRatings200ApplicationJSONResults `json:"results,omitempty"`
}

func (t TvSeriesContentRatings200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesContentRatings200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesContentRatings200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeriesContentRatings200ApplicationJSON) GetResults() []TvSeriesContentRatings200ApplicationJSONResults {
	if o == nil {
		return nil
	}
	return o.Results
}

type TvSeriesContentRatingsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	TvSeriesContentRatings200ApplicationJSONObject *TvSeriesContentRatings200ApplicationJSON
}

func (o *TvSeriesContentRatingsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TvSeriesContentRatingsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TvSeriesContentRatingsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TvSeriesContentRatingsResponse) GetTvSeriesContentRatings200ApplicationJSONObject() *TvSeriesContentRatings200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.TvSeriesContentRatings200ApplicationJSONObject
}
