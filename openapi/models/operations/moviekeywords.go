// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type MovieKeywordsRequest struct {
	MovieID string `pathParam:"style=simple,explode=false,name=movie_id"`
}

func (o *MovieKeywordsRequest) GetMovieID() string {
	if o == nil {
		return ""
	}
	return o.MovieID
}

type MovieKeywords200ApplicationJSONKeywords struct {
	ID   *int64  `default:"0" json:"id"`
	Name *string `json:"name,omitempty"`
}

func (m MovieKeywords200ApplicationJSONKeywords) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieKeywords200ApplicationJSONKeywords) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieKeywords200ApplicationJSONKeywords) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MovieKeywords200ApplicationJSONKeywords) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// MovieKeywords200ApplicationJSON - 200
type MovieKeywords200ApplicationJSON struct {
	ID       *int64                                    `default:"0" json:"id"`
	Keywords []MovieKeywords200ApplicationJSONKeywords `json:"keywords,omitempty"`
}

func (m MovieKeywords200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieKeywords200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieKeywords200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MovieKeywords200ApplicationJSON) GetKeywords() []MovieKeywords200ApplicationJSONKeywords {
	if o == nil {
		return nil
	}
	return o.Keywords
}

type MovieKeywordsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	MovieKeywords200ApplicationJSONObject *MovieKeywords200ApplicationJSON
}

func (o *MovieKeywordsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *MovieKeywordsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *MovieKeywordsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *MovieKeywordsResponse) GetMovieKeywords200ApplicationJSONObject() *MovieKeywords200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.MovieKeywords200ApplicationJSONObject
}
