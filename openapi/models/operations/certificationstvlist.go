// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type CertificationsTvList200ApplicationJSONCertificationsAR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsAR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsAR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsAR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsAR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsAR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsAU struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsAU) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsAU) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsAU) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsAU) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsAU) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsBG struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsBG) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsBG) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsBG) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsBG) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsBG) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsBR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsBR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsBR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsBR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsBR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsBR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsCA struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsCA) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsCA) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsCA) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsCA) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsCA) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsCAQC struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsCAQC) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsCAQC) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsCAQC) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsCAQC) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsCAQC) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsDE struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsDE) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsDE) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsDE) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsDE) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsDE) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsDK struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsDK) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsDK) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsDK) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsDK) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsDK) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsES struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsES) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsES) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsES) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsES) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsES) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsFI struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsFI) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsFI) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsFI) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsFI) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsFI) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsFR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsFR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsFR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsFR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsFR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsFR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsGB struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsGB) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsGB) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsGB) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsGB) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsGB) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsGR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsGR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsGR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsGR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsGR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsGR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsHU struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsHU) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsHU) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsHU) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsHU) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsHU) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsID struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsID) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsID) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsID) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsID) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsID) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsIL struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsIL) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsIL) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsIL) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsIL) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsIL) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsIN struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsIN) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsIN) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsIN) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsIN) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsIN) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsIT struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsIT) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsIT) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsIT) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsIT) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsIT) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsKR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsKR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsKR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsKR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsKR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsKR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsLT struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsLT) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsLT) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsLT) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsLT) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsLT) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsMA struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsMA) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsMA) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsMA) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsMA) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsMA) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsMX struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsMX) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsMX) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsMX) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsMX) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsMX) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsMY struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsMY) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsMY) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsMY) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsMY) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsMY) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsNL struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsNL) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsNL) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsNL) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsNL) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsNL) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsNO struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsNO) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsNO) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsNO) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsNO) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsNO) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsNZ struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsNZ) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsNZ) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsNZ) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsNZ) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsNZ) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsPH struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsPH) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsPH) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPH) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPH) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPH) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsPL struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsPL) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsPL) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPL) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPL) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPL) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsPR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsPR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsPR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsPT struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsPT) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsPT) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPT) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPT) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsPT) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsRU struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsRU) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsRU) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsRU) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsRU) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsRU) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsSE struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsSE) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsSE) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsSE) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsSE) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsSE) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsSG struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsSG) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsSG) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsSG) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsSG) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsSG) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsSK struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsSK) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsSK) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsSK) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsSK) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsSK) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsTH struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsTH) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsTH) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsTH) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsTH) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsTH) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsTR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsTR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsTR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsTR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsTR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsTR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsTW struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsTW) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsTW) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsTW) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsTW) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsTW) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsUS struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsUS) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsUS) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsUS) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsUS) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsUS) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsVI struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsVI) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsVI) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsVI) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsVI) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsVI) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertificationsZA struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationsTvList200ApplicationJSONCertificationsZA) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationsTvList200ApplicationJSONCertificationsZA) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationsTvList200ApplicationJSONCertificationsZA) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationsTvList200ApplicationJSONCertificationsZA) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationsTvList200ApplicationJSONCertificationsZA) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationsTvList200ApplicationJSONCertifications struct {
	Ar   []CertificationsTvList200ApplicationJSONCertificationsAR   `json:"AR,omitempty"`
	Au   []CertificationsTvList200ApplicationJSONCertificationsAU   `json:"AU,omitempty"`
	Bg   []CertificationsTvList200ApplicationJSONCertificationsBG   `json:"BG,omitempty"`
	Br   []CertificationsTvList200ApplicationJSONCertificationsBR   `json:"BR,omitempty"`
	Ca   []CertificationsTvList200ApplicationJSONCertificationsCA   `json:"CA,omitempty"`
	CaQc []CertificationsTvList200ApplicationJSONCertificationsCAQC `json:"CA-QC,omitempty"`
	De   []CertificationsTvList200ApplicationJSONCertificationsDE   `json:"DE,omitempty"`
	Dk   []CertificationsTvList200ApplicationJSONCertificationsDK   `json:"DK,omitempty"`
	Es   []CertificationsTvList200ApplicationJSONCertificationsES   `json:"ES,omitempty"`
	Fi   []CertificationsTvList200ApplicationJSONCertificationsFI   `json:"FI,omitempty"`
	Fr   []CertificationsTvList200ApplicationJSONCertificationsFR   `json:"FR,omitempty"`
	Gb   []CertificationsTvList200ApplicationJSONCertificationsGB   `json:"GB,omitempty"`
	Gr   []CertificationsTvList200ApplicationJSONCertificationsGR   `json:"GR,omitempty"`
	Hu   []CertificationsTvList200ApplicationJSONCertificationsHU   `json:"HU,omitempty"`
	ID   []CertificationsTvList200ApplicationJSONCertificationsID   `json:"ID,omitempty"`
	Il   []CertificationsTvList200ApplicationJSONCertificationsIL   `json:"IL,omitempty"`
	In   []CertificationsTvList200ApplicationJSONCertificationsIN   `json:"IN,omitempty"`
	It   []CertificationsTvList200ApplicationJSONCertificationsIT   `json:"IT,omitempty"`
	Kr   []CertificationsTvList200ApplicationJSONCertificationsKR   `json:"KR,omitempty"`
	Lt   []CertificationsTvList200ApplicationJSONCertificationsLT   `json:"LT,omitempty"`
	Ma   []CertificationsTvList200ApplicationJSONCertificationsMA   `json:"MA,omitempty"`
	Mx   []CertificationsTvList200ApplicationJSONCertificationsMX   `json:"MX,omitempty"`
	My   []CertificationsTvList200ApplicationJSONCertificationsMY   `json:"MY,omitempty"`
	Nl   []CertificationsTvList200ApplicationJSONCertificationsNL   `json:"NL,omitempty"`
	No   []CertificationsTvList200ApplicationJSONCertificationsNO   `json:"NO,omitempty"`
	Nz   []CertificationsTvList200ApplicationJSONCertificationsNZ   `json:"NZ,omitempty"`
	Ph   []CertificationsTvList200ApplicationJSONCertificationsPH   `json:"PH,omitempty"`
	Pl   []CertificationsTvList200ApplicationJSONCertificationsPL   `json:"PL,omitempty"`
	Pr   []CertificationsTvList200ApplicationJSONCertificationsPR   `json:"PR,omitempty"`
	Pt   []CertificationsTvList200ApplicationJSONCertificationsPT   `json:"PT,omitempty"`
	Ru   []CertificationsTvList200ApplicationJSONCertificationsRU   `json:"RU,omitempty"`
	Se   []CertificationsTvList200ApplicationJSONCertificationsSE   `json:"SE,omitempty"`
	Sg   []CertificationsTvList200ApplicationJSONCertificationsSG   `json:"SG,omitempty"`
	Sk   []CertificationsTvList200ApplicationJSONCertificationsSK   `json:"SK,omitempty"`
	Th   []CertificationsTvList200ApplicationJSONCertificationsTH   `json:"TH,omitempty"`
	Tr   []CertificationsTvList200ApplicationJSONCertificationsTR   `json:"TR,omitempty"`
	Tw   []CertificationsTvList200ApplicationJSONCertificationsTW   `json:"TW,omitempty"`
	Us   []CertificationsTvList200ApplicationJSONCertificationsUS   `json:"US,omitempty"`
	Vi   []CertificationsTvList200ApplicationJSONCertificationsVI   `json:"VI,omitempty"`
	Za   []CertificationsTvList200ApplicationJSONCertificationsZA   `json:"ZA,omitempty"`
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetAr() []CertificationsTvList200ApplicationJSONCertificationsAR {
	if o == nil {
		return nil
	}
	return o.Ar
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetAu() []CertificationsTvList200ApplicationJSONCertificationsAU {
	if o == nil {
		return nil
	}
	return o.Au
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetBg() []CertificationsTvList200ApplicationJSONCertificationsBG {
	if o == nil {
		return nil
	}
	return o.Bg
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetBr() []CertificationsTvList200ApplicationJSONCertificationsBR {
	if o == nil {
		return nil
	}
	return o.Br
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetCa() []CertificationsTvList200ApplicationJSONCertificationsCA {
	if o == nil {
		return nil
	}
	return o.Ca
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetCaQc() []CertificationsTvList200ApplicationJSONCertificationsCAQC {
	if o == nil {
		return nil
	}
	return o.CaQc
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetDe() []CertificationsTvList200ApplicationJSONCertificationsDE {
	if o == nil {
		return nil
	}
	return o.De
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetDk() []CertificationsTvList200ApplicationJSONCertificationsDK {
	if o == nil {
		return nil
	}
	return o.Dk
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetEs() []CertificationsTvList200ApplicationJSONCertificationsES {
	if o == nil {
		return nil
	}
	return o.Es
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetFi() []CertificationsTvList200ApplicationJSONCertificationsFI {
	if o == nil {
		return nil
	}
	return o.Fi
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetFr() []CertificationsTvList200ApplicationJSONCertificationsFR {
	if o == nil {
		return nil
	}
	return o.Fr
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetGb() []CertificationsTvList200ApplicationJSONCertificationsGB {
	if o == nil {
		return nil
	}
	return o.Gb
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetGr() []CertificationsTvList200ApplicationJSONCertificationsGR {
	if o == nil {
		return nil
	}
	return o.Gr
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetHu() []CertificationsTvList200ApplicationJSONCertificationsHU {
	if o == nil {
		return nil
	}
	return o.Hu
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetID() []CertificationsTvList200ApplicationJSONCertificationsID {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetIl() []CertificationsTvList200ApplicationJSONCertificationsIL {
	if o == nil {
		return nil
	}
	return o.Il
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetIn() []CertificationsTvList200ApplicationJSONCertificationsIN {
	if o == nil {
		return nil
	}
	return o.In
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetIt() []CertificationsTvList200ApplicationJSONCertificationsIT {
	if o == nil {
		return nil
	}
	return o.It
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetKr() []CertificationsTvList200ApplicationJSONCertificationsKR {
	if o == nil {
		return nil
	}
	return o.Kr
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetLt() []CertificationsTvList200ApplicationJSONCertificationsLT {
	if o == nil {
		return nil
	}
	return o.Lt
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetMa() []CertificationsTvList200ApplicationJSONCertificationsMA {
	if o == nil {
		return nil
	}
	return o.Ma
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetMx() []CertificationsTvList200ApplicationJSONCertificationsMX {
	if o == nil {
		return nil
	}
	return o.Mx
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetMy() []CertificationsTvList200ApplicationJSONCertificationsMY {
	if o == nil {
		return nil
	}
	return o.My
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetNl() []CertificationsTvList200ApplicationJSONCertificationsNL {
	if o == nil {
		return nil
	}
	return o.Nl
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetNo() []CertificationsTvList200ApplicationJSONCertificationsNO {
	if o == nil {
		return nil
	}
	return o.No
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetNz() []CertificationsTvList200ApplicationJSONCertificationsNZ {
	if o == nil {
		return nil
	}
	return o.Nz
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetPh() []CertificationsTvList200ApplicationJSONCertificationsPH {
	if o == nil {
		return nil
	}
	return o.Ph
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetPl() []CertificationsTvList200ApplicationJSONCertificationsPL {
	if o == nil {
		return nil
	}
	return o.Pl
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetPr() []CertificationsTvList200ApplicationJSONCertificationsPR {
	if o == nil {
		return nil
	}
	return o.Pr
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetPt() []CertificationsTvList200ApplicationJSONCertificationsPT {
	if o == nil {
		return nil
	}
	return o.Pt
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetRu() []CertificationsTvList200ApplicationJSONCertificationsRU {
	if o == nil {
		return nil
	}
	return o.Ru
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetSe() []CertificationsTvList200ApplicationJSONCertificationsSE {
	if o == nil {
		return nil
	}
	return o.Se
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetSg() []CertificationsTvList200ApplicationJSONCertificationsSG {
	if o == nil {
		return nil
	}
	return o.Sg
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetSk() []CertificationsTvList200ApplicationJSONCertificationsSK {
	if o == nil {
		return nil
	}
	return o.Sk
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetTh() []CertificationsTvList200ApplicationJSONCertificationsTH {
	if o == nil {
		return nil
	}
	return o.Th
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetTr() []CertificationsTvList200ApplicationJSONCertificationsTR {
	if o == nil {
		return nil
	}
	return o.Tr
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetTw() []CertificationsTvList200ApplicationJSONCertificationsTW {
	if o == nil {
		return nil
	}
	return o.Tw
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetUs() []CertificationsTvList200ApplicationJSONCertificationsUS {
	if o == nil {
		return nil
	}
	return o.Us
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetVi() []CertificationsTvList200ApplicationJSONCertificationsVI {
	if o == nil {
		return nil
	}
	return o.Vi
}

func (o *CertificationsTvList200ApplicationJSONCertifications) GetZa() []CertificationsTvList200ApplicationJSONCertificationsZA {
	if o == nil {
		return nil
	}
	return o.Za
}

// CertificationsTvList200ApplicationJSON - 200
type CertificationsTvList200ApplicationJSON struct {
	Certifications *CertificationsTvList200ApplicationJSONCertifications `json:"certifications,omitempty"`
}

func (o *CertificationsTvList200ApplicationJSON) GetCertifications() *CertificationsTvList200ApplicationJSONCertifications {
	if o == nil {
		return nil
	}
	return o.Certifications
}

type CertificationsTvListResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	CertificationsTvList200ApplicationJSONObject *CertificationsTvList200ApplicationJSON
}

func (o *CertificationsTvListResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CertificationsTvListResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CertificationsTvListResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CertificationsTvListResponse) GetCertificationsTvList200ApplicationJSONObject() *CertificationsTvList200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.CertificationsTvList200ApplicationJSONObject
}
