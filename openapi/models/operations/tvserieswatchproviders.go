// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type TvSeriesWatchProvidersRequest struct {
	SeriesID int `pathParam:"style=simple,explode=false,name=series_id"`
}

func (o *TvSeriesWatchProvidersRequest) GetSeriesID() int {
	if o == nil {
		return 0
	}
	return o.SeriesID
}

type TvSeriesWatchProviders200ApplicationJSONResultsAEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsAEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsAEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsAE struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsAEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAE) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsAEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsARFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsARFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsARFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsARFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsARFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsARFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsARFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsAR struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsARFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAR) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsARFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsATBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsATBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsATBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsATBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsATBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsATBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsATBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsATFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsATFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsATFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsATFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsATFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsATFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsATFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsAT struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsATBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsATFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAT) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsATBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAT) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsATFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsAUBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsAUBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsAUBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAUBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAUBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAUBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAUBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsAUFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsAUFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsAUFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAUFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAUFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAUFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAUFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsAU struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsAUBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsAUFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAU) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsAUBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAU) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsAUFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsAU) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsBAFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsBAFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsBAFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBAFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBAFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBAFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBAFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsBA struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsBAFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBA) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsBAFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBA) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsBBFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsBBFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsBBFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBBFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBBFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBBFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBBFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsBB struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsBBFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBB) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsBBFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBB) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsBEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsBEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsBEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsBE struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsBEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBE) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsBEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsBGFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsBGFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsBGFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBGFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBGFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBGFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBGFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsBG struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsBGFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBG) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsBGFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBG) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsBOFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsBOFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsBOFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBOFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBOFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBOFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBOFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsBO struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsBOFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBO) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsBOFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBO) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsBRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsBRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsBRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsBR struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsBRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBR) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsBRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsBSFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsBSFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsBSFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBSFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBSFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBSFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBSFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsBS struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsBSFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBS) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsBSFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsBS) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsCABuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsCABuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsCABuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCABuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCABuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCABuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCABuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsCAFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsCAFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsCAFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCAFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCAFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCAFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCAFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsCA struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsCABuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsCAFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCA) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsCABuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCA) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsCAFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCA) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsCHBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsCHBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsCHBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCHBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCHBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCHBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCHBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsCHFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsCHFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsCHFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCHFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCHFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCHFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCHFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsCH struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsCHBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsCHFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCH) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsCHBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCH) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsCHFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCH) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsCIFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsCIFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsCIFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCIFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCIFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCIFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCIFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsCI struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsCIFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCI) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsCIFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCI) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsCLFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsCLFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsCLFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCLFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCLFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCLFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCLFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsCL struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsCLFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCL) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsCLFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCL) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsCOFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsCOFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsCOFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCOFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCOFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCOFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCOFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsCO struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsCOFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCO) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsCOFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCO) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsCRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsCRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsCRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsCR struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsCRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCR) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsCRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsCZFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsCZFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsCZFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCZFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCZFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCZFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCZFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsCZ struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsCZFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCZ) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsCZFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsCZ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsDEBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsDEBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsDEBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDEBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDEBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDEBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDEBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsDEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsDEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsDEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsDE struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsDEBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsDEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDE) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsDEBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDE) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsDEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsDKFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsDKFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsDKFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDKFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDKFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDKFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDKFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsDK struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsDKFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDK) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsDKFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDK) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsDOFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsDOFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsDOFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDOFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDOFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDOFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDOFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsDO struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsDOFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDO) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsDOFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDO) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsDZFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsDZFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsDZFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDZFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDZFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDZFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDZFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsDZ struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsDZFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDZ) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsDZFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsDZ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsECFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsECFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsECFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsECFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsECFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsECFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsECFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsEC struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsECFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsEC) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsECFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsEC) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsEGFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsEGFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsEGFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsEGFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsEGFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsEGFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsEGFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsEG struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsEGFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsEG) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsEGFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsEG) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsESFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsESFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsESFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsESFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsESFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsESFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsESFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsES struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsESFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsES) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsESFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsES) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsFIBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsFIBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsFIBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFIBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFIBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFIBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFIBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsFIFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsFIFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsFIFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFIFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFIFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFIFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFIFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsFI struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsFIBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsFIFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFI) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsFIBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFI) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsFIFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFI) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsFRBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsFRBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsFRBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFRBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFRBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFRBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFRBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsFRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsFRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsFRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsFR struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsFRBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsFRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFR) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsFRBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFR) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsFRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsFR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsGBBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsGBBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsGBBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGBBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGBBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGBBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGBBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsGBFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsGBFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsGBFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGBFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGBFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGBFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGBFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsGB struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsGBBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsGBFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGB) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsGBBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGB) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsGBFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGB) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsGFFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsGFFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsGFFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGFFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGFFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGFFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGFFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsGF struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsGFFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGF) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsGFFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGF) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsGHFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsGHFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsGHFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGHFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGHFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGHFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGHFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsGH struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsGHFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGH) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsGHFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGH) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsGQFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsGQFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsGQFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGQFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGQFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGQFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGQFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsGQ struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsGQFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGQ) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsGQFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGQ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsGTFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsGTFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsGTFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGTFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGTFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGTFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGTFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsGT struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsGTFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGT) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsGTFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsGT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsHKFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsHKFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsHKFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHKFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHKFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHKFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHKFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsHK struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsHKFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHK) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsHKFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHK) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsHNFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsHNFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsHNFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHNFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHNFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHNFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHNFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsHN struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsHNFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHN) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsHNFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHN) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsHRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsHRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsHRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsHR struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsHRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHR) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsHRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsHUFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsHUFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsHUFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHUFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHUFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHUFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHUFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsHU struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsHUFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHU) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsHUFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsHU) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsIDFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsIDFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsIDFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIDFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIDFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIDFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIDFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsID struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsIDFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsID) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsIDFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsID) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsIEBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsIEBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsIEBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIEBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIEBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIEBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIEBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsIEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsIEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsIEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsIE struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsIEBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsIEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIE) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsIEBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIE) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsIEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsILFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsILFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsILFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsILFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsILFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsILFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsILFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsIL struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsILFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIL) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsILFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIL) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsIQFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsIQFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsIQFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIQFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIQFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIQFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIQFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsIQ struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsIQFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIQ) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsIQFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIQ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsITBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsITBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsITBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsITBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsITBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsITBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsITBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsITFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsITFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsITFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsITFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsITFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsITFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsITFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsIT struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsITBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsITFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIT) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsITBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIT) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsITFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsIT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsJMFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsJMFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsJMFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJMFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJMFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJMFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJMFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsJM struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsJMFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJM) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsJMFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJM) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsJPBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsJPBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsJPBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsJPFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsJPFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsJPFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsJPRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsJPRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsJPRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJPRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsJP struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsJPBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsJPFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
	Rent     []TvSeriesWatchProviders200ApplicationJSONResultsJPRent     `json:"rent,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJP) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsJPBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJP) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsJPFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJP) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsJP) GetRent() []TvSeriesWatchProviders200ApplicationJSONResultsJPRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type TvSeriesWatchProviders200ApplicationJSONResultsKEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsKEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsKEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsKE struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsKEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKE) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsKEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsKRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsKRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsKRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsKR struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsKRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKR) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsKRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsKR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsLBFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsLBFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsLBFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLBFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLBFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLBFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLBFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsLB struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsLBFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLB) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsLBFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLB) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsLTFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsLTFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsLTFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLTFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLTFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLTFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLTFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsLT struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsLTFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLT) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsLTFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsLYFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsLYFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsLYFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLYFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLYFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLYFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLYFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsLY struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsLYFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLY) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsLYFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsLY) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsMDFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsMDFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsMDFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMDFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMDFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMDFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMDFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsMD struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsMDFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMD) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsMDFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMD) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsMKFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsMKFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsMKFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMKFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMKFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMKFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMKFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsMK struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsMKFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMK) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsMKFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMK) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsMUFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsMUFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsMUFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMUFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMUFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMUFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMUFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsMU struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsMUFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMU) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsMUFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMU) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsMXFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsMXFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsMXFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMXFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMXFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMXFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMXFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsMX struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsMXFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMX) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsMXFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMX) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsMYFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsMYFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsMYFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMYFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMYFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMYFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMYFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsMY struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsMYFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMY) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsMYFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMY) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsMZFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsMZFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsMZFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMZFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMZFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMZFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMZFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsMZ struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsMZFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMZ) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsMZFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsMZ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsNEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsNEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsNEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsNE struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsNEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNE) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsNEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsNGFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsNGFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsNGFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNGFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNGFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNGFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNGFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsNG struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsNGFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNG) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsNGFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNG) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsNLBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsNLBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsNLBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNLBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNLBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNLBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNLBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsNLFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsNLFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsNLFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNLFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNLFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNLFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNLFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsNL struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsNLBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsNLFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNL) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsNLBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNL) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsNLFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNL) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsNOBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsNOBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsNOBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNOBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNOBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNOBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNOBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsNOFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsNOFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsNOFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNOFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNOFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNOFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNOFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsNO struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsNOBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsNOFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNO) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsNOBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNO) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsNOFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNO) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsNZFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsNZFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsNZFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNZFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNZFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNZFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNZFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsNZ struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsNZFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNZ) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsNZFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsNZ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsPAFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsPAFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsPAFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPAFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPAFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPAFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPAFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsPA struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsPAFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPA) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsPAFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPA) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsPEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsPEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsPEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsPE struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsPEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPE) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsPEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsPHFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsPHFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsPHFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPHFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPHFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPHFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPHFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsPH struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsPHFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPH) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsPHFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPH) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsPLFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsPLFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsPLFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPLFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPLFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPLFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPLFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsPLRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsPLRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsPLRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPLRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPLRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPLRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPLRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsPL struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsPLFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
	Rent     []TvSeriesWatchProviders200ApplicationJSONResultsPLRent     `json:"rent,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPL) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsPLFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPL) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPL) GetRent() []TvSeriesWatchProviders200ApplicationJSONResultsPLRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type TvSeriesWatchProviders200ApplicationJSONResultsPSFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsPSFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsPSFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPSFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPSFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPSFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPSFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsPS struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsPSFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPS) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsPSFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPS) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsPTFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsPTFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsPTFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPTFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPTFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPTFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPTFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsPT struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsPTFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPT) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsPTFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsPYFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsPYFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsPYFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPYFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPYFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPYFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPYFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsPY struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsPYFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPY) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsPYFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsPY) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsROFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsROFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsROFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsROFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsROFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsROFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsROFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsRO struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsROFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRO) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsROFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRO) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsRSFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsRSFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsRSFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRSFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRSFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRSFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRSFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsRS struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsRSFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRS) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsRSFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRS) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsRUAds struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsRUAds) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsRUAds) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRUAds) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRUAds) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRUAds) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRUAds) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsRUFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsRUFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsRUFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRUFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRUFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRUFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRUFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsRU struct {
	Ads      []TvSeriesWatchProviders200ApplicationJSONResultsRUAds      `json:"ads,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsRUFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRU) GetAds() []TvSeriesWatchProviders200ApplicationJSONResultsRUAds {
	if o == nil {
		return nil
	}
	return o.Ads
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRU) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsRUFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsRU) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsSAFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsSAFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsSAFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSAFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSAFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSAFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSAFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsSA struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsSAFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSA) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsSAFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSA) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsSCFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsSCFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsSCFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSCFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSCFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSCFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSCFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsSC struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsSCFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSC) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsSCFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSC) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsSEBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsSEBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsSEBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSEBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSEBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSEBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSEBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsSEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsSEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsSEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsSE struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsSEBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsSEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSE) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsSEBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSE) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsSEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsSGFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsSGFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsSGFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSGFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSGFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSGFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSGFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsSG struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsSGFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSG) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsSGFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSG) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsSIFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsSIFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsSIFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSIFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSIFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSIFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSIFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsSI struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsSIFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSI) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsSIFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSI) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsSKFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsSKFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsSKFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSKFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSKFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSKFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSKFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsSK struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsSKFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSK) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsSKFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSK) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsSNFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsSNFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsSNFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSNFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSNFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSNFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSNFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsSN struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsSNFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSN) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsSNFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSN) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsSVFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsSVFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsSVFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSVFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSVFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSVFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSVFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsSV struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsSVFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSV) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsSVFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsSV) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsTHFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsTHFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsTHFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTHFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTHFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTHFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTHFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsTH struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsTHFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTH) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsTHFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTH) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsTRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsTRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsTRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsTR struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsTRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTR) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsTRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsTTFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsTTFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsTTFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTTFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTTFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTTFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTTFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsTT struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsTTFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTT) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsTTFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsTWFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsTWFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsTWFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTWFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTWFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTWFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTWFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsTW struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsTWFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTW) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsTWFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTW) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsTZFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsTZFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsTZFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTZFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTZFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTZFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTZFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsTZ struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsTZFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTZ) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsTZFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsTZ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsUGFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsUGFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsUGFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUGFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUGFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUGFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUGFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsUG struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsUGFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUG) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsUGFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUG) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsUSBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsUSBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsUSBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsUSFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsUSFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsUSFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsUSFree struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsUSFree) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsUSFree) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSFree) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSFree) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSFree) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUSFree) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsUS struct {
	Buy      []TvSeriesWatchProviders200ApplicationJSONResultsUSBuy      `json:"buy,omitempty"`
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsUSFlatrate `json:"flatrate,omitempty"`
	Free     []TvSeriesWatchProviders200ApplicationJSONResultsUSFree     `json:"free,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUS) GetBuy() []TvSeriesWatchProviders200ApplicationJSONResultsUSBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUS) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsUSFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUS) GetFree() []TvSeriesWatchProviders200ApplicationJSONResultsUSFree {
	if o == nil {
		return nil
	}
	return o.Free
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUS) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsUYFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsUYFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsUYFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUYFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUYFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUYFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUYFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsUY struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsUYFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUY) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsUYFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsUY) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsVEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsVEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsVEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsVEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsVEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsVEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsVEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsVE struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsVEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsVE) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsVEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsVE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsZAFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsZAFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsZAFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZAFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZAFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZAFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZAFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsZA struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsZAFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZA) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsZAFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZA) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResultsZMFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSONResultsZMFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSONResultsZMFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZMFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZMFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZMFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZMFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type TvSeriesWatchProviders200ApplicationJSONResultsZM struct {
	Flatrate []TvSeriesWatchProviders200ApplicationJSONResultsZMFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                     `json:"link,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZM) GetFlatrate() []TvSeriesWatchProviders200ApplicationJSONResultsZMFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *TvSeriesWatchProviders200ApplicationJSONResultsZM) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type TvSeriesWatchProviders200ApplicationJSONResults struct {
	Ae *TvSeriesWatchProviders200ApplicationJSONResultsAE `json:"AE,omitempty"`
	Ar *TvSeriesWatchProviders200ApplicationJSONResultsAR `json:"AR,omitempty"`
	At *TvSeriesWatchProviders200ApplicationJSONResultsAT `json:"AT,omitempty"`
	Au *TvSeriesWatchProviders200ApplicationJSONResultsAU `json:"AU,omitempty"`
	Ba *TvSeriesWatchProviders200ApplicationJSONResultsBA `json:"BA,omitempty"`
	Bb *TvSeriesWatchProviders200ApplicationJSONResultsBB `json:"BB,omitempty"`
	Be *TvSeriesWatchProviders200ApplicationJSONResultsBE `json:"BE,omitempty"`
	Bg *TvSeriesWatchProviders200ApplicationJSONResultsBG `json:"BG,omitempty"`
	Bo *TvSeriesWatchProviders200ApplicationJSONResultsBO `json:"BO,omitempty"`
	Br *TvSeriesWatchProviders200ApplicationJSONResultsBR `json:"BR,omitempty"`
	Bs *TvSeriesWatchProviders200ApplicationJSONResultsBS `json:"BS,omitempty"`
	Ca *TvSeriesWatchProviders200ApplicationJSONResultsCA `json:"CA,omitempty"`
	Ch *TvSeriesWatchProviders200ApplicationJSONResultsCH `json:"CH,omitempty"`
	Ci *TvSeriesWatchProviders200ApplicationJSONResultsCI `json:"CI,omitempty"`
	Cl *TvSeriesWatchProviders200ApplicationJSONResultsCL `json:"CL,omitempty"`
	Co *TvSeriesWatchProviders200ApplicationJSONResultsCO `json:"CO,omitempty"`
	Cr *TvSeriesWatchProviders200ApplicationJSONResultsCR `json:"CR,omitempty"`
	Cz *TvSeriesWatchProviders200ApplicationJSONResultsCZ `json:"CZ,omitempty"`
	De *TvSeriesWatchProviders200ApplicationJSONResultsDE `json:"DE,omitempty"`
	Dk *TvSeriesWatchProviders200ApplicationJSONResultsDK `json:"DK,omitempty"`
	Do *TvSeriesWatchProviders200ApplicationJSONResultsDO `json:"DO,omitempty"`
	Dz *TvSeriesWatchProviders200ApplicationJSONResultsDZ `json:"DZ,omitempty"`
	Ec *TvSeriesWatchProviders200ApplicationJSONResultsEC `json:"EC,omitempty"`
	Eg *TvSeriesWatchProviders200ApplicationJSONResultsEG `json:"EG,omitempty"`
	Es *TvSeriesWatchProviders200ApplicationJSONResultsES `json:"ES,omitempty"`
	Fi *TvSeriesWatchProviders200ApplicationJSONResultsFI `json:"FI,omitempty"`
	Fr *TvSeriesWatchProviders200ApplicationJSONResultsFR `json:"FR,omitempty"`
	Gb *TvSeriesWatchProviders200ApplicationJSONResultsGB `json:"GB,omitempty"`
	Gf *TvSeriesWatchProviders200ApplicationJSONResultsGF `json:"GF,omitempty"`
	Gh *TvSeriesWatchProviders200ApplicationJSONResultsGH `json:"GH,omitempty"`
	Gq *TvSeriesWatchProviders200ApplicationJSONResultsGQ `json:"GQ,omitempty"`
	Gt *TvSeriesWatchProviders200ApplicationJSONResultsGT `json:"GT,omitempty"`
	Hk *TvSeriesWatchProviders200ApplicationJSONResultsHK `json:"HK,omitempty"`
	Hn *TvSeriesWatchProviders200ApplicationJSONResultsHN `json:"HN,omitempty"`
	Hr *TvSeriesWatchProviders200ApplicationJSONResultsHR `json:"HR,omitempty"`
	Hu *TvSeriesWatchProviders200ApplicationJSONResultsHU `json:"HU,omitempty"`
	ID *TvSeriesWatchProviders200ApplicationJSONResultsID `json:"ID,omitempty"`
	Ie *TvSeriesWatchProviders200ApplicationJSONResultsIE `json:"IE,omitempty"`
	Il *TvSeriesWatchProviders200ApplicationJSONResultsIL `json:"IL,omitempty"`
	Iq *TvSeriesWatchProviders200ApplicationJSONResultsIQ `json:"IQ,omitempty"`
	It *TvSeriesWatchProviders200ApplicationJSONResultsIT `json:"IT,omitempty"`
	Jm *TvSeriesWatchProviders200ApplicationJSONResultsJM `json:"JM,omitempty"`
	Jp *TvSeriesWatchProviders200ApplicationJSONResultsJP `json:"JP,omitempty"`
	Ke *TvSeriesWatchProviders200ApplicationJSONResultsKE `json:"KE,omitempty"`
	Kr *TvSeriesWatchProviders200ApplicationJSONResultsKR `json:"KR,omitempty"`
	Lb *TvSeriesWatchProviders200ApplicationJSONResultsLB `json:"LB,omitempty"`
	Lt *TvSeriesWatchProviders200ApplicationJSONResultsLT `json:"LT,omitempty"`
	Ly *TvSeriesWatchProviders200ApplicationJSONResultsLY `json:"LY,omitempty"`
	Md *TvSeriesWatchProviders200ApplicationJSONResultsMD `json:"MD,omitempty"`
	Mk *TvSeriesWatchProviders200ApplicationJSONResultsMK `json:"MK,omitempty"`
	Mu *TvSeriesWatchProviders200ApplicationJSONResultsMU `json:"MU,omitempty"`
	Mx *TvSeriesWatchProviders200ApplicationJSONResultsMX `json:"MX,omitempty"`
	My *TvSeriesWatchProviders200ApplicationJSONResultsMY `json:"MY,omitempty"`
	Mz *TvSeriesWatchProviders200ApplicationJSONResultsMZ `json:"MZ,omitempty"`
	Ne *TvSeriesWatchProviders200ApplicationJSONResultsNE `json:"NE,omitempty"`
	Ng *TvSeriesWatchProviders200ApplicationJSONResultsNG `json:"NG,omitempty"`
	Nl *TvSeriesWatchProviders200ApplicationJSONResultsNL `json:"NL,omitempty"`
	No *TvSeriesWatchProviders200ApplicationJSONResultsNO `json:"NO,omitempty"`
	Nz *TvSeriesWatchProviders200ApplicationJSONResultsNZ `json:"NZ,omitempty"`
	Pa *TvSeriesWatchProviders200ApplicationJSONResultsPA `json:"PA,omitempty"`
	Pe *TvSeriesWatchProviders200ApplicationJSONResultsPE `json:"PE,omitempty"`
	Ph *TvSeriesWatchProviders200ApplicationJSONResultsPH `json:"PH,omitempty"`
	Pl *TvSeriesWatchProviders200ApplicationJSONResultsPL `json:"PL,omitempty"`
	Ps *TvSeriesWatchProviders200ApplicationJSONResultsPS `json:"PS,omitempty"`
	Pt *TvSeriesWatchProviders200ApplicationJSONResultsPT `json:"PT,omitempty"`
	Py *TvSeriesWatchProviders200ApplicationJSONResultsPY `json:"PY,omitempty"`
	Ro *TvSeriesWatchProviders200ApplicationJSONResultsRO `json:"RO,omitempty"`
	Rs *TvSeriesWatchProviders200ApplicationJSONResultsRS `json:"RS,omitempty"`
	Ru *TvSeriesWatchProviders200ApplicationJSONResultsRU `json:"RU,omitempty"`
	Sa *TvSeriesWatchProviders200ApplicationJSONResultsSA `json:"SA,omitempty"`
	Sc *TvSeriesWatchProviders200ApplicationJSONResultsSC `json:"SC,omitempty"`
	Se *TvSeriesWatchProviders200ApplicationJSONResultsSE `json:"SE,omitempty"`
	Sg *TvSeriesWatchProviders200ApplicationJSONResultsSG `json:"SG,omitempty"`
	Si *TvSeriesWatchProviders200ApplicationJSONResultsSI `json:"SI,omitempty"`
	Sk *TvSeriesWatchProviders200ApplicationJSONResultsSK `json:"SK,omitempty"`
	Sn *TvSeriesWatchProviders200ApplicationJSONResultsSN `json:"SN,omitempty"`
	Sv *TvSeriesWatchProviders200ApplicationJSONResultsSV `json:"SV,omitempty"`
	Th *TvSeriesWatchProviders200ApplicationJSONResultsTH `json:"TH,omitempty"`
	Tr *TvSeriesWatchProviders200ApplicationJSONResultsTR `json:"TR,omitempty"`
	Tt *TvSeriesWatchProviders200ApplicationJSONResultsTT `json:"TT,omitempty"`
	Tw *TvSeriesWatchProviders200ApplicationJSONResultsTW `json:"TW,omitempty"`
	Tz *TvSeriesWatchProviders200ApplicationJSONResultsTZ `json:"TZ,omitempty"`
	Ug *TvSeriesWatchProviders200ApplicationJSONResultsUG `json:"UG,omitempty"`
	Us *TvSeriesWatchProviders200ApplicationJSONResultsUS `json:"US,omitempty"`
	Uy *TvSeriesWatchProviders200ApplicationJSONResultsUY `json:"UY,omitempty"`
	Ve *TvSeriesWatchProviders200ApplicationJSONResultsVE `json:"VE,omitempty"`
	Za *TvSeriesWatchProviders200ApplicationJSONResultsZA `json:"ZA,omitempty"`
	Zm *TvSeriesWatchProviders200ApplicationJSONResultsZM `json:"ZM,omitempty"`
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetAe() *TvSeriesWatchProviders200ApplicationJSONResultsAE {
	if o == nil {
		return nil
	}
	return o.Ae
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetAr() *TvSeriesWatchProviders200ApplicationJSONResultsAR {
	if o == nil {
		return nil
	}
	return o.Ar
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetAt() *TvSeriesWatchProviders200ApplicationJSONResultsAT {
	if o == nil {
		return nil
	}
	return o.At
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetAu() *TvSeriesWatchProviders200ApplicationJSONResultsAU {
	if o == nil {
		return nil
	}
	return o.Au
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetBa() *TvSeriesWatchProviders200ApplicationJSONResultsBA {
	if o == nil {
		return nil
	}
	return o.Ba
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetBb() *TvSeriesWatchProviders200ApplicationJSONResultsBB {
	if o == nil {
		return nil
	}
	return o.Bb
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetBe() *TvSeriesWatchProviders200ApplicationJSONResultsBE {
	if o == nil {
		return nil
	}
	return o.Be
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetBg() *TvSeriesWatchProviders200ApplicationJSONResultsBG {
	if o == nil {
		return nil
	}
	return o.Bg
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetBo() *TvSeriesWatchProviders200ApplicationJSONResultsBO {
	if o == nil {
		return nil
	}
	return o.Bo
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetBr() *TvSeriesWatchProviders200ApplicationJSONResultsBR {
	if o == nil {
		return nil
	}
	return o.Br
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetBs() *TvSeriesWatchProviders200ApplicationJSONResultsBS {
	if o == nil {
		return nil
	}
	return o.Bs
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetCa() *TvSeriesWatchProviders200ApplicationJSONResultsCA {
	if o == nil {
		return nil
	}
	return o.Ca
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetCh() *TvSeriesWatchProviders200ApplicationJSONResultsCH {
	if o == nil {
		return nil
	}
	return o.Ch
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetCi() *TvSeriesWatchProviders200ApplicationJSONResultsCI {
	if o == nil {
		return nil
	}
	return o.Ci
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetCl() *TvSeriesWatchProviders200ApplicationJSONResultsCL {
	if o == nil {
		return nil
	}
	return o.Cl
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetCo() *TvSeriesWatchProviders200ApplicationJSONResultsCO {
	if o == nil {
		return nil
	}
	return o.Co
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetCr() *TvSeriesWatchProviders200ApplicationJSONResultsCR {
	if o == nil {
		return nil
	}
	return o.Cr
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetCz() *TvSeriesWatchProviders200ApplicationJSONResultsCZ {
	if o == nil {
		return nil
	}
	return o.Cz
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetDe() *TvSeriesWatchProviders200ApplicationJSONResultsDE {
	if o == nil {
		return nil
	}
	return o.De
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetDk() *TvSeriesWatchProviders200ApplicationJSONResultsDK {
	if o == nil {
		return nil
	}
	return o.Dk
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetDo() *TvSeriesWatchProviders200ApplicationJSONResultsDO {
	if o == nil {
		return nil
	}
	return o.Do
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetDz() *TvSeriesWatchProviders200ApplicationJSONResultsDZ {
	if o == nil {
		return nil
	}
	return o.Dz
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetEc() *TvSeriesWatchProviders200ApplicationJSONResultsEC {
	if o == nil {
		return nil
	}
	return o.Ec
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetEg() *TvSeriesWatchProviders200ApplicationJSONResultsEG {
	if o == nil {
		return nil
	}
	return o.Eg
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetEs() *TvSeriesWatchProviders200ApplicationJSONResultsES {
	if o == nil {
		return nil
	}
	return o.Es
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetFi() *TvSeriesWatchProviders200ApplicationJSONResultsFI {
	if o == nil {
		return nil
	}
	return o.Fi
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetFr() *TvSeriesWatchProviders200ApplicationJSONResultsFR {
	if o == nil {
		return nil
	}
	return o.Fr
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetGb() *TvSeriesWatchProviders200ApplicationJSONResultsGB {
	if o == nil {
		return nil
	}
	return o.Gb
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetGf() *TvSeriesWatchProviders200ApplicationJSONResultsGF {
	if o == nil {
		return nil
	}
	return o.Gf
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetGh() *TvSeriesWatchProviders200ApplicationJSONResultsGH {
	if o == nil {
		return nil
	}
	return o.Gh
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetGq() *TvSeriesWatchProviders200ApplicationJSONResultsGQ {
	if o == nil {
		return nil
	}
	return o.Gq
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetGt() *TvSeriesWatchProviders200ApplicationJSONResultsGT {
	if o == nil {
		return nil
	}
	return o.Gt
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetHk() *TvSeriesWatchProviders200ApplicationJSONResultsHK {
	if o == nil {
		return nil
	}
	return o.Hk
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetHn() *TvSeriesWatchProviders200ApplicationJSONResultsHN {
	if o == nil {
		return nil
	}
	return o.Hn
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetHr() *TvSeriesWatchProviders200ApplicationJSONResultsHR {
	if o == nil {
		return nil
	}
	return o.Hr
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetHu() *TvSeriesWatchProviders200ApplicationJSONResultsHU {
	if o == nil {
		return nil
	}
	return o.Hu
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetID() *TvSeriesWatchProviders200ApplicationJSONResultsID {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetIe() *TvSeriesWatchProviders200ApplicationJSONResultsIE {
	if o == nil {
		return nil
	}
	return o.Ie
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetIl() *TvSeriesWatchProviders200ApplicationJSONResultsIL {
	if o == nil {
		return nil
	}
	return o.Il
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetIq() *TvSeriesWatchProviders200ApplicationJSONResultsIQ {
	if o == nil {
		return nil
	}
	return o.Iq
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetIt() *TvSeriesWatchProviders200ApplicationJSONResultsIT {
	if o == nil {
		return nil
	}
	return o.It
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetJm() *TvSeriesWatchProviders200ApplicationJSONResultsJM {
	if o == nil {
		return nil
	}
	return o.Jm
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetJp() *TvSeriesWatchProviders200ApplicationJSONResultsJP {
	if o == nil {
		return nil
	}
	return o.Jp
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetKe() *TvSeriesWatchProviders200ApplicationJSONResultsKE {
	if o == nil {
		return nil
	}
	return o.Ke
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetKr() *TvSeriesWatchProviders200ApplicationJSONResultsKR {
	if o == nil {
		return nil
	}
	return o.Kr
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetLb() *TvSeriesWatchProviders200ApplicationJSONResultsLB {
	if o == nil {
		return nil
	}
	return o.Lb
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetLt() *TvSeriesWatchProviders200ApplicationJSONResultsLT {
	if o == nil {
		return nil
	}
	return o.Lt
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetLy() *TvSeriesWatchProviders200ApplicationJSONResultsLY {
	if o == nil {
		return nil
	}
	return o.Ly
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetMd() *TvSeriesWatchProviders200ApplicationJSONResultsMD {
	if o == nil {
		return nil
	}
	return o.Md
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetMk() *TvSeriesWatchProviders200ApplicationJSONResultsMK {
	if o == nil {
		return nil
	}
	return o.Mk
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetMu() *TvSeriesWatchProviders200ApplicationJSONResultsMU {
	if o == nil {
		return nil
	}
	return o.Mu
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetMx() *TvSeriesWatchProviders200ApplicationJSONResultsMX {
	if o == nil {
		return nil
	}
	return o.Mx
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetMy() *TvSeriesWatchProviders200ApplicationJSONResultsMY {
	if o == nil {
		return nil
	}
	return o.My
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetMz() *TvSeriesWatchProviders200ApplicationJSONResultsMZ {
	if o == nil {
		return nil
	}
	return o.Mz
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetNe() *TvSeriesWatchProviders200ApplicationJSONResultsNE {
	if o == nil {
		return nil
	}
	return o.Ne
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetNg() *TvSeriesWatchProviders200ApplicationJSONResultsNG {
	if o == nil {
		return nil
	}
	return o.Ng
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetNl() *TvSeriesWatchProviders200ApplicationJSONResultsNL {
	if o == nil {
		return nil
	}
	return o.Nl
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetNo() *TvSeriesWatchProviders200ApplicationJSONResultsNO {
	if o == nil {
		return nil
	}
	return o.No
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetNz() *TvSeriesWatchProviders200ApplicationJSONResultsNZ {
	if o == nil {
		return nil
	}
	return o.Nz
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetPa() *TvSeriesWatchProviders200ApplicationJSONResultsPA {
	if o == nil {
		return nil
	}
	return o.Pa
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetPe() *TvSeriesWatchProviders200ApplicationJSONResultsPE {
	if o == nil {
		return nil
	}
	return o.Pe
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetPh() *TvSeriesWatchProviders200ApplicationJSONResultsPH {
	if o == nil {
		return nil
	}
	return o.Ph
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetPl() *TvSeriesWatchProviders200ApplicationJSONResultsPL {
	if o == nil {
		return nil
	}
	return o.Pl
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetPs() *TvSeriesWatchProviders200ApplicationJSONResultsPS {
	if o == nil {
		return nil
	}
	return o.Ps
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetPt() *TvSeriesWatchProviders200ApplicationJSONResultsPT {
	if o == nil {
		return nil
	}
	return o.Pt
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetPy() *TvSeriesWatchProviders200ApplicationJSONResultsPY {
	if o == nil {
		return nil
	}
	return o.Py
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetRo() *TvSeriesWatchProviders200ApplicationJSONResultsRO {
	if o == nil {
		return nil
	}
	return o.Ro
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetRs() *TvSeriesWatchProviders200ApplicationJSONResultsRS {
	if o == nil {
		return nil
	}
	return o.Rs
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetRu() *TvSeriesWatchProviders200ApplicationJSONResultsRU {
	if o == nil {
		return nil
	}
	return o.Ru
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetSa() *TvSeriesWatchProviders200ApplicationJSONResultsSA {
	if o == nil {
		return nil
	}
	return o.Sa
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetSc() *TvSeriesWatchProviders200ApplicationJSONResultsSC {
	if o == nil {
		return nil
	}
	return o.Sc
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetSe() *TvSeriesWatchProviders200ApplicationJSONResultsSE {
	if o == nil {
		return nil
	}
	return o.Se
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetSg() *TvSeriesWatchProviders200ApplicationJSONResultsSG {
	if o == nil {
		return nil
	}
	return o.Sg
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetSi() *TvSeriesWatchProviders200ApplicationJSONResultsSI {
	if o == nil {
		return nil
	}
	return o.Si
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetSk() *TvSeriesWatchProviders200ApplicationJSONResultsSK {
	if o == nil {
		return nil
	}
	return o.Sk
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetSn() *TvSeriesWatchProviders200ApplicationJSONResultsSN {
	if o == nil {
		return nil
	}
	return o.Sn
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetSv() *TvSeriesWatchProviders200ApplicationJSONResultsSV {
	if o == nil {
		return nil
	}
	return o.Sv
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetTh() *TvSeriesWatchProviders200ApplicationJSONResultsTH {
	if o == nil {
		return nil
	}
	return o.Th
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetTr() *TvSeriesWatchProviders200ApplicationJSONResultsTR {
	if o == nil {
		return nil
	}
	return o.Tr
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetTt() *TvSeriesWatchProviders200ApplicationJSONResultsTT {
	if o == nil {
		return nil
	}
	return o.Tt
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetTw() *TvSeriesWatchProviders200ApplicationJSONResultsTW {
	if o == nil {
		return nil
	}
	return o.Tw
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetTz() *TvSeriesWatchProviders200ApplicationJSONResultsTZ {
	if o == nil {
		return nil
	}
	return o.Tz
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetUg() *TvSeriesWatchProviders200ApplicationJSONResultsUG {
	if o == nil {
		return nil
	}
	return o.Ug
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetUs() *TvSeriesWatchProviders200ApplicationJSONResultsUS {
	if o == nil {
		return nil
	}
	return o.Us
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetUy() *TvSeriesWatchProviders200ApplicationJSONResultsUY {
	if o == nil {
		return nil
	}
	return o.Uy
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetVe() *TvSeriesWatchProviders200ApplicationJSONResultsVE {
	if o == nil {
		return nil
	}
	return o.Ve
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetZa() *TvSeriesWatchProviders200ApplicationJSONResultsZA {
	if o == nil {
		return nil
	}
	return o.Za
}

func (o *TvSeriesWatchProviders200ApplicationJSONResults) GetZm() *TvSeriesWatchProviders200ApplicationJSONResultsZM {
	if o == nil {
		return nil
	}
	return o.Zm
}

// TvSeriesWatchProviders200ApplicationJSON - 200
type TvSeriesWatchProviders200ApplicationJSON struct {
	ID      *int64                                           `default:"0" json:"id"`
	Results *TvSeriesWatchProviders200ApplicationJSONResults `json:"results,omitempty"`
}

func (t TvSeriesWatchProviders200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesWatchProviders200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesWatchProviders200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeriesWatchProviders200ApplicationJSON) GetResults() *TvSeriesWatchProviders200ApplicationJSONResults {
	if o == nil {
		return nil
	}
	return o.Results
}

type TvSeriesWatchProvidersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	TvSeriesWatchProviders200ApplicationJSONObject *TvSeriesWatchProviders200ApplicationJSON
}

func (o *TvSeriesWatchProvidersResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TvSeriesWatchProvidersResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TvSeriesWatchProvidersResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TvSeriesWatchProvidersResponse) GetTvSeriesWatchProviders200ApplicationJSONObject() *TvSeriesWatchProviders200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.TvSeriesWatchProviders200ApplicationJSONObject
}
