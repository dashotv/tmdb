// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type ListCreateRequestBody struct {
	RawBody string `json:"RAW_BODY"`
}

func (o *ListCreateRequestBody) GetRawBody() string {
	if o == nil {
		return ""
	}
	return o.RawBody
}

type ListCreateRequest struct {
	SessionID   string                 `queryParam:"style=form,explode=true,name=session_id"`
	RequestBody *ListCreateRequestBody `request:"mediaType=application/json"`
}

func (o *ListCreateRequest) GetSessionID() string {
	if o == nil {
		return ""
	}
	return o.SessionID
}

func (o *ListCreateRequest) GetRequestBody() *ListCreateRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

// ListCreate200ApplicationJSON - 200
type ListCreate200ApplicationJSON struct {
	ListID        *int64  `default:"0" json:"list_id"`
	StatusCode    *int64  `default:"0" json:"status_code"`
	StatusMessage *string `json:"status_message,omitempty"`
	Success       *bool   `default:"true" json:"success"`
}

func (l ListCreate200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListCreate200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListCreate200ApplicationJSON) GetListID() *int64 {
	if o == nil {
		return nil
	}
	return o.ListID
}

func (o *ListCreate200ApplicationJSON) GetStatusCode() *int64 {
	if o == nil {
		return nil
	}
	return o.StatusCode
}

func (o *ListCreate200ApplicationJSON) GetStatusMessage() *string {
	if o == nil {
		return nil
	}
	return o.StatusMessage
}

func (o *ListCreate200ApplicationJSON) GetSuccess() *bool {
	if o == nil {
		return nil
	}
	return o.Success
}

type ListCreateResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	ListCreate200ApplicationJSONObject *ListCreate200ApplicationJSON
}

func (o *ListCreateResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListCreateResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListCreateResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListCreateResponse) GetListCreate200ApplicationJSONObject() *ListCreate200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.ListCreate200ApplicationJSONObject
}
