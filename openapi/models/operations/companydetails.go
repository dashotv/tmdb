// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type CompanyDetailsRequest struct {
	CompanyID int `pathParam:"style=simple,explode=false,name=company_id"`
}

func (o *CompanyDetailsRequest) GetCompanyID() int {
	if o == nil {
		return 0
	}
	return o.CompanyID
}

// CompanyDetails200ApplicationJSON - 200
type CompanyDetails200ApplicationJSON struct {
	Description   *string     `json:"description,omitempty"`
	Headquarters  *string     `json:"headquarters,omitempty"`
	Homepage      *string     `json:"homepage,omitempty"`
	ID            *int64      `default:"0" json:"id"`
	LogoPath      *string     `json:"logo_path,omitempty"`
	Name          *string     `json:"name,omitempty"`
	OriginCountry *string     `json:"origin_country,omitempty"`
	ParentCompany interface{} `json:"parent_company,omitempty"`
}

func (c CompanyDetails200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CompanyDetails200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CompanyDetails200ApplicationJSON) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CompanyDetails200ApplicationJSON) GetHeadquarters() *string {
	if o == nil {
		return nil
	}
	return o.Headquarters
}

func (o *CompanyDetails200ApplicationJSON) GetHomepage() *string {
	if o == nil {
		return nil
	}
	return o.Homepage
}

func (o *CompanyDetails200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CompanyDetails200ApplicationJSON) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *CompanyDetails200ApplicationJSON) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CompanyDetails200ApplicationJSON) GetOriginCountry() *string {
	if o == nil {
		return nil
	}
	return o.OriginCountry
}

func (o *CompanyDetails200ApplicationJSON) GetParentCompany() interface{} {
	if o == nil {
		return nil
	}
	return o.ParentCompany
}

type CompanyDetailsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	CompanyDetails200ApplicationJSONObject *CompanyDetails200ApplicationJSON
}

func (o *CompanyDetailsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CompanyDetailsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CompanyDetailsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CompanyDetailsResponse) GetCompanyDetails200ApplicationJSONObject() *CompanyDetails200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.CompanyDetails200ApplicationJSONObject
}
