// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type MovieWatchProvidersRequest struct {
	MovieID int `pathParam:"style=simple,explode=false,name=movie_id"`
}

func (o *MovieWatchProvidersRequest) GetMovieID() int {
	if o == nil {
		return 0
	}
	return o.MovieID
}

type MovieWatchProviders200ApplicationJSONResultsAEBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsAEBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsAEBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsAEBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsAEBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsAEBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsAEBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsAEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsAEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsAEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsAEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsAEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsAEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsAEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsAERent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsAERent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsAERent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsAERent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsAERent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsAERent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsAERent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsAE struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsAEBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsAEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsAERent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsAE) GetBuy() []MovieWatchProviders200ApplicationJSONResultsAEBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsAE) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsAEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsAE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsAE) GetRent() []MovieWatchProviders200ApplicationJSONResultsAERent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsALBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsALBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsALBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsALBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsALBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsALBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsALBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsAL struct {
	Buy  []MovieWatchProviders200ApplicationJSONResultsALBuy `json:"buy,omitempty"`
	Link *string                                             `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsAL) GetBuy() []MovieWatchProviders200ApplicationJSONResultsALBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsAL) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsARBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsARBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsARBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsARBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsARBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsARBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsARBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsARFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsARFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsARFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsARFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsARFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsARFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsARFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsARRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsARRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsARRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsARRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsARRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsARRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsARRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsAR struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsARBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsARFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsARRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsAR) GetBuy() []MovieWatchProviders200ApplicationJSONResultsARBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsAR) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsARFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsAR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsAR) GetRent() []MovieWatchProviders200ApplicationJSONResultsARRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsATBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsATBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsATBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsATBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsATBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsATBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsATBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsATFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsATFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsATFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsATFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsATFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsATFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsATFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsATRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsATRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsATRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsATRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsATRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsATRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsATRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsAT struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsATBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsATFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsATRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsAT) GetBuy() []MovieWatchProviders200ApplicationJSONResultsATBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsAT) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsATFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsAT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsAT) GetRent() []MovieWatchProviders200ApplicationJSONResultsATRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsAUBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsAUBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsAUBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsAUBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsAUBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsAUBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsAUBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsAUFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsAUFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsAUFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsAUFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsAUFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsAUFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsAUFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsAU struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsAUBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsAUFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsAU) GetBuy() []MovieWatchProviders200ApplicationJSONResultsAUBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsAU) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsAUFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsAU) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsBABuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBABuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBABuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBABuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBABuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBABuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBABuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBAFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBAFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBAFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBAFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBAFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBAFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBAFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBA struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsBABuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsBAFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsBA) GetBuy() []MovieWatchProviders200ApplicationJSONResultsBABuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsBA) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsBAFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsBA) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsBBFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBBFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBBFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBBFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBBFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBBFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBBFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBB struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsBBFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsBB) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsBBFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsBB) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsBEBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBEBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBEBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBEBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBEBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBEBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBEBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBERent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBERent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBERent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBERent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBERent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBERent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBERent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBE struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsBEBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsBEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsBERent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsBE) GetBuy() []MovieWatchProviders200ApplicationJSONResultsBEBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsBE) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsBEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsBE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsBE) GetRent() []MovieWatchProviders200ApplicationJSONResultsBERent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsBGBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBGBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBGBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBGFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBGFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBGFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBGRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBGRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBGRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBGRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBG struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsBGBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsBGFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsBGRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsBG) GetBuy() []MovieWatchProviders200ApplicationJSONResultsBGBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsBG) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsBGFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsBG) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsBG) GetRent() []MovieWatchProviders200ApplicationJSONResultsBGRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsBHBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBHBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBHBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBHBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBHBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBHBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBHBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBH struct {
	Buy  []MovieWatchProviders200ApplicationJSONResultsBHBuy `json:"buy,omitempty"`
	Link *string                                             `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsBH) GetBuy() []MovieWatchProviders200ApplicationJSONResultsBHBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsBH) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsBOFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBOFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBOFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBOFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBOFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBOFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBOFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBO struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsBOFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsBO) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsBOFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsBO) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsBRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBR struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsBRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsBR) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsBRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsBR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsBSFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsBSFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsBSFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsBSFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsBSFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsBSFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsBSFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsBS struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsBSFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsBS) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsBSFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsBS) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsCABuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCABuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCABuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCABuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCABuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCABuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCABuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCAFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCAFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCAFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCAFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCAFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCAFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCAFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCARent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCARent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCARent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCARent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCARent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCARent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCARent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCA struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsCABuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsCAFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsCARent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsCA) GetBuy() []MovieWatchProviders200ApplicationJSONResultsCABuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsCA) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsCAFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsCA) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsCA) GetRent() []MovieWatchProviders200ApplicationJSONResultsCARent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsCHBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCHBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCHBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCHFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCHFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCHFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCHRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCHRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCHRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCHRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCH struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsCHBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsCHFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsCHRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsCH) GetBuy() []MovieWatchProviders200ApplicationJSONResultsCHBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsCH) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsCHFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsCH) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsCH) GetRent() []MovieWatchProviders200ApplicationJSONResultsCHRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsCLBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCLBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCLBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCLFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCLFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCLFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCLRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCLRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCLRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCLRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCL struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsCLBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsCLFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsCLRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsCL) GetBuy() []MovieWatchProviders200ApplicationJSONResultsCLBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsCL) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsCLFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsCL) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsCL) GetRent() []MovieWatchProviders200ApplicationJSONResultsCLRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsCOBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCOBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCOBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCOBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCOBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCOBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCOBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCOFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCOFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCOFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCOFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCOFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCOFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCOFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCORent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCORent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCORent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCORent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCORent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCORent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCORent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCO struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsCOBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsCOFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsCORent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsCO) GetBuy() []MovieWatchProviders200ApplicationJSONResultsCOBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsCO) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsCOFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsCO) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsCO) GetRent() []MovieWatchProviders200ApplicationJSONResultsCORent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsCRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCR struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsCRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsCR) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsCRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsCR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsCVBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCVBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCVBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCVBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCVBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCVBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCVBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCVRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCVRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCVRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCVRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCVRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCVRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCVRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCV struct {
	Buy  []MovieWatchProviders200ApplicationJSONResultsCVBuy  `json:"buy,omitempty"`
	Link *string                                              `json:"link,omitempty"`
	Rent []MovieWatchProviders200ApplicationJSONResultsCVRent `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsCV) GetBuy() []MovieWatchProviders200ApplicationJSONResultsCVBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsCV) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsCV) GetRent() []MovieWatchProviders200ApplicationJSONResultsCVRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsCZBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCZBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCZBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCZFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCZFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCZFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCZRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsCZRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsCZRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsCZ struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsCZBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsCZFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsCZRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZ) GetBuy() []MovieWatchProviders200ApplicationJSONResultsCZBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZ) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsCZFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsCZ) GetRent() []MovieWatchProviders200ApplicationJSONResultsCZRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsDEBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsDEBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsDEBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsDEBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsDEBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsDEBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsDEBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsDEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsDEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsDEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsDEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsDEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsDEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsDEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsDERent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsDERent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsDERent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsDERent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsDERent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsDERent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsDERent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsDE struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsDEBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsDEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsDERent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsDE) GetBuy() []MovieWatchProviders200ApplicationJSONResultsDEBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsDE) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsDEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsDE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsDE) GetRent() []MovieWatchProviders200ApplicationJSONResultsDERent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsDKBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsDKBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsDKBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsDKFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsDKFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsDKFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsDKRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsDKRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsDKRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsDKRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsDK struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsDKBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsDKFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsDKRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsDK) GetBuy() []MovieWatchProviders200ApplicationJSONResultsDKBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsDK) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsDKFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsDK) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsDK) GetRent() []MovieWatchProviders200ApplicationJSONResultsDKRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsDOFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsDOFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsDOFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsDOFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsDOFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsDOFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsDOFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsDO struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsDOFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsDO) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsDOFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsDO) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsECBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsECBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsECBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsECBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsECBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsECBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsECBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsECFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsECFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsECFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsECFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsECFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsECFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsECFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsECRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsECRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsECRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsECRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsECRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsECRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsECRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsEC struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsECBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsECFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsECRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsEC) GetBuy() []MovieWatchProviders200ApplicationJSONResultsECBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsEC) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsECFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsEC) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsEC) GetRent() []MovieWatchProviders200ApplicationJSONResultsECRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsEEBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsEEBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsEEBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsEEBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsEEBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsEEBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsEEBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsEEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsEEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsEEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsEEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsEEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsEEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsEEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsEERent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsEERent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsEERent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsEERent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsEERent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsEERent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsEERent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsEE struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsEEBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsEEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsEERent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsEE) GetBuy() []MovieWatchProviders200ApplicationJSONResultsEEBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsEE) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsEEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsEE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsEE) GetRent() []MovieWatchProviders200ApplicationJSONResultsEERent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsEGBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsEGBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsEGBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsEGBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsEGBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsEGBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsEGBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsEGRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsEGRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsEGRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsEGRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsEGRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsEGRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsEGRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsEG struct {
	Buy  []MovieWatchProviders200ApplicationJSONResultsEGBuy  `json:"buy,omitempty"`
	Link *string                                              `json:"link,omitempty"`
	Rent []MovieWatchProviders200ApplicationJSONResultsEGRent `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsEG) GetBuy() []MovieWatchProviders200ApplicationJSONResultsEGBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsEG) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsEG) GetRent() []MovieWatchProviders200ApplicationJSONResultsEGRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsESAds struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsESAds) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsESAds) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsESAds) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsESAds) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsESAds) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsESAds) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsESBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsESBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsESBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsESBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsESBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsESBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsESBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsESFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsESFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsESFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsESFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsESFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsESFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsESFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsESRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsESRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsESRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsESRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsESRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsESRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsESRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsES struct {
	Ads      []MovieWatchProviders200ApplicationJSONResultsESAds      `json:"ads,omitempty"`
	Buy      []MovieWatchProviders200ApplicationJSONResultsESBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsESFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsESRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsES) GetAds() []MovieWatchProviders200ApplicationJSONResultsESAds {
	if o == nil {
		return nil
	}
	return o.Ads
}

func (o *MovieWatchProviders200ApplicationJSONResultsES) GetBuy() []MovieWatchProviders200ApplicationJSONResultsESBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsES) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsESFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsES) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsES) GetRent() []MovieWatchProviders200ApplicationJSONResultsESRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsFIBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsFIBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsFIBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsFIFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsFIFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsFIFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsFIRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsFIRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsFIRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsFIRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsFI struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsFIBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsFIFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsFIRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsFI) GetBuy() []MovieWatchProviders200ApplicationJSONResultsFIBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsFI) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsFIFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsFI) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsFI) GetRent() []MovieWatchProviders200ApplicationJSONResultsFIRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsFJBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsFJBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsFJBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsFJBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsFJBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsFJBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsFJBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsFJ struct {
	Buy  []MovieWatchProviders200ApplicationJSONResultsFJBuy `json:"buy,omitempty"`
	Link *string                                             `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsFJ) GetBuy() []MovieWatchProviders200ApplicationJSONResultsFJBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsFJ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsFRBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsFRBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsFRBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsFRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsFRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsFRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsFRRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsFRRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsFRRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsFRRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsFR struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsFRBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsFRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsFRRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsFR) GetBuy() []MovieWatchProviders200ApplicationJSONResultsFRBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsFR) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsFRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsFR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsFR) GetRent() []MovieWatchProviders200ApplicationJSONResultsFRRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsGBBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsGBBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsGBBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsGBFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsGBFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsGBFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsGBRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsGBRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsGBRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsGBRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsGB struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsGBBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsGBFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsGBRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsGB) GetBuy() []MovieWatchProviders200ApplicationJSONResultsGBBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsGB) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsGBFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsGB) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsGB) GetRent() []MovieWatchProviders200ApplicationJSONResultsGBRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsGFFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsGFFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsGFFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsGFFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsGFFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsGFFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsGFFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsGF struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsGFFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsGF) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsGFFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsGF) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsGIFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsGIFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsGIFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsGIFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsGIFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsGIFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsGIFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsGI struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsGIFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsGI) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsGIFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsGI) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsGRBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsGRBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsGRBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsGRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsGRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsGRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsGRRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsGRRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsGRRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsGRRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsGR struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsGRBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsGRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsGRRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsGR) GetBuy() []MovieWatchProviders200ApplicationJSONResultsGRBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsGR) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsGRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsGR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsGR) GetRent() []MovieWatchProviders200ApplicationJSONResultsGRRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsGTFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsGTFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsGTFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsGTFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsGTFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsGTFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsGTFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsGT struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsGTFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsGT) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsGTFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsGT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsHKFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsHKFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsHKFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsHKFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsHKFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsHKFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsHKFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsHK struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsHKFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsHK) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsHKFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsHK) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsHNFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsHNFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsHNFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsHNFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsHNFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsHNFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsHNFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsHN struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsHNFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsHN) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsHNFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsHN) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsHRAds struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsHRAds) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsHRAds) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRAds) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRAds) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRAds) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRAds) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsHRBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsHRBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsHRBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsHRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsHRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsHRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsHRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsHR struct {
	Ads      []MovieWatchProviders200ApplicationJSONResultsHRAds      `json:"ads,omitempty"`
	Buy      []MovieWatchProviders200ApplicationJSONResultsHRBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsHRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsHR) GetAds() []MovieWatchProviders200ApplicationJSONResultsHRAds {
	if o == nil {
		return nil
	}
	return o.Ads
}

func (o *MovieWatchProviders200ApplicationJSONResultsHR) GetBuy() []MovieWatchProviders200ApplicationJSONResultsHRBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsHR) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsHRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsHR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsHUBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsHUBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsHUBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsHUBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsHUBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsHUBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsHUBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsHUFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsHUFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsHUFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsHUFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsHUFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsHUFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsHUFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsHURent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsHURent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsHURent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsHURent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsHURent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsHURent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsHURent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsHU struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsHUBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsHUFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsHURent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsHU) GetBuy() []MovieWatchProviders200ApplicationJSONResultsHUBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsHU) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsHUFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsHU) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsHU) GetRent() []MovieWatchProviders200ApplicationJSONResultsHURent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsIDFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsIDFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsIDFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsIDFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsIDFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsIDFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsIDFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsID struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsIDFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsID) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsIDFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsID) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsIEBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsIEBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsIEBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsIEBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsIEBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsIEBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsIEBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsIEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsIEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsIEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsIEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsIEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsIEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsIEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsIERent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsIERent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsIERent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsIERent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsIERent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsIERent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsIERent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsIE struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsIEBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsIEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsIERent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsIE) GetBuy() []MovieWatchProviders200ApplicationJSONResultsIEBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsIE) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsIEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsIE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsIE) GetRent() []MovieWatchProviders200ApplicationJSONResultsIERent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsILBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsILBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsILBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsILBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsILBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsILBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsILBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsILFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsILFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsILFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsILFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsILFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsILFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsILFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsIL struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsILBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsILFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsIL) GetBuy() []MovieWatchProviders200ApplicationJSONResultsILBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsIL) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsILFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsIL) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsINBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsINBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsINBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsINBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsINBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsINBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsINBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsINFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsINFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsINFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsINFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsINFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsINFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsINFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsINRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsINRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsINRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsINRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsINRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsINRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsINRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsIN struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsINBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsINFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsINRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsIN) GetBuy() []MovieWatchProviders200ApplicationJSONResultsINBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsIN) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsINFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsIN) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsIN) GetRent() []MovieWatchProviders200ApplicationJSONResultsINRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsIQFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsIQFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsIQFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsIQFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsIQFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsIQFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsIQFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsIQ struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsIQFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsIQ) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsIQFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsIQ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsISBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsISBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsISBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsISBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsISBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsISBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsISBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsISFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsISFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsISFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsISFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsISFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsISFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsISFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsIS struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsISBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsISFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsIS) GetBuy() []MovieWatchProviders200ApplicationJSONResultsISBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsIS) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsISFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsIS) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsITBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsITBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsITBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsITBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsITBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsITBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsITBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsITFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsITFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsITFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsITFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsITFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsITFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsITFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsITRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsITRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsITRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsITRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsITRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsITRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsITRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsIT struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsITBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsITFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsITRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsIT) GetBuy() []MovieWatchProviders200ApplicationJSONResultsITBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsIT) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsITFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsIT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsIT) GetRent() []MovieWatchProviders200ApplicationJSONResultsITRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsJMFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsJMFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsJMFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsJMFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsJMFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsJMFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsJMFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsJM struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsJMFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsJM) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsJMFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsJM) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsJOBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsJOBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsJOBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsJOBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsJOBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsJOBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsJOBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsJOFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsJOFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsJOFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsJOFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsJOFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsJOFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsJOFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsJO struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsJOBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsJOFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsJO) GetBuy() []MovieWatchProviders200ApplicationJSONResultsJOBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsJO) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsJOFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsJO) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsJPBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsJPBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsJPBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsJPFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsJPFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsJPFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsJPRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsJPRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsJPRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsJPRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsJP struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsJPBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsJPFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsJPRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsJP) GetBuy() []MovieWatchProviders200ApplicationJSONResultsJPBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsJP) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsJPFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsJP) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsJP) GetRent() []MovieWatchProviders200ApplicationJSONResultsJPRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsKRBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsKRBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsKRBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsKRBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsKRBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsKRBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsKRBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsKRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsKRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsKRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsKRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsKRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsKRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsKRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsKR struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsKRBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsKRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsKR) GetBuy() []MovieWatchProviders200ApplicationJSONResultsKRBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsKR) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsKRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsKR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsKWBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsKWBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsKWBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsKWBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsKWBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsKWBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsKWBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsKWFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsKWFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsKWFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsKWFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsKWFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsKWFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsKWFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsKW struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsKWBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsKWFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsKW) GetBuy() []MovieWatchProviders200ApplicationJSONResultsKWBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsKW) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsKWFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsKW) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsLBBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsLBBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsLBBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsLBBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsLBBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsLBBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsLBBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsLBFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsLBFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsLBFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsLBFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsLBFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsLBFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsLBFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsLB struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsLBBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsLBFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsLB) GetBuy() []MovieWatchProviders200ApplicationJSONResultsLBBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsLB) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsLBFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsLB) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsLIFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsLIFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsLIFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsLIFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsLIFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsLIFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsLIFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsLI struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsLIFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsLI) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsLIFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsLI) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsLTBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsLTBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsLTBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsLTFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsLTFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsLTFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsLTRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsLTRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsLTRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsLTRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsLT struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsLTBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsLTFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsLTRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsLT) GetBuy() []MovieWatchProviders200ApplicationJSONResultsLTBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsLT) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsLTFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsLT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsLT) GetRent() []MovieWatchProviders200ApplicationJSONResultsLTRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsLVBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsLVBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsLVBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsLVBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsLVBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsLVBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsLVBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsLVFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsLVFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsLVFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsLVFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsLVFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsLVFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsLVFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsLV struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsLVBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsLVFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsLV) GetBuy() []MovieWatchProviders200ApplicationJSONResultsLVBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsLV) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsLVFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsLV) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsMDBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMDBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMDBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMDBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMDBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMDBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMDBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMDFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMDFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMDFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMDFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMDFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMDFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMDFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMD struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsMDBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsMDFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsMD) GetBuy() []MovieWatchProviders200ApplicationJSONResultsMDBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsMD) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsMDFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsMD) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsMKBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMKBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMKBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMKBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMKBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMKBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMKBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMKFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMKFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMKFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMKFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMKFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMKFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMKFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMK struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsMKBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsMKFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsMK) GetBuy() []MovieWatchProviders200ApplicationJSONResultsMKBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsMK) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsMKFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsMK) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsMTBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMTBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMTBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMTFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMTFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMTFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMTRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMTRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMTRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMTRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMT struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsMTBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsMTFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsMTRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsMT) GetBuy() []MovieWatchProviders200ApplicationJSONResultsMTBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsMT) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsMTFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsMT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsMT) GetRent() []MovieWatchProviders200ApplicationJSONResultsMTRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsMUBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMUBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMUBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMUBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMUBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMUBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMUBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMURent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMURent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMURent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMURent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMURent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMURent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMURent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMU struct {
	Buy  []MovieWatchProviders200ApplicationJSONResultsMUBuy  `json:"buy,omitempty"`
	Link *string                                              `json:"link,omitempty"`
	Rent []MovieWatchProviders200ApplicationJSONResultsMURent `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsMU) GetBuy() []MovieWatchProviders200ApplicationJSONResultsMUBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsMU) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsMU) GetRent() []MovieWatchProviders200ApplicationJSONResultsMURent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsMXFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMXFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMXFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMXFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMXFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMXFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMXFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMX struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsMXFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsMX) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsMXFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsMX) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsMYFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMYFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMYFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMYFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMYFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMYFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMYFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMY struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsMYFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsMY) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsMYFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsMY) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsMZBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMZBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMZBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMZBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMZBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMZBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMZBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMZRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsMZRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsMZRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsMZRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsMZRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsMZRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsMZRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsMZ struct {
	Buy  []MovieWatchProviders200ApplicationJSONResultsMZBuy  `json:"buy,omitempty"`
	Link *string                                              `json:"link,omitempty"`
	Rent []MovieWatchProviders200ApplicationJSONResultsMZRent `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsMZ) GetBuy() []MovieWatchProviders200ApplicationJSONResultsMZBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsMZ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsMZ) GetRent() []MovieWatchProviders200ApplicationJSONResultsMZRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsNLBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsNLBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsNLBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsNLFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsNLFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsNLFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsNLRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsNLRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsNLRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsNLRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsNL struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsNLBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsNLFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsNLRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsNL) GetBuy() []MovieWatchProviders200ApplicationJSONResultsNLBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsNL) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsNLFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsNL) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsNL) GetRent() []MovieWatchProviders200ApplicationJSONResultsNLRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsNOBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsNOBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsNOBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsNOBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsNOBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsNOBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsNOBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsNOFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsNOFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsNOFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsNOFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsNOFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsNOFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsNOFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsNORent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsNORent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsNORent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsNORent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsNORent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsNORent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsNORent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsNO struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsNOBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsNOFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsNORent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsNO) GetBuy() []MovieWatchProviders200ApplicationJSONResultsNOBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsNO) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsNOFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsNO) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsNO) GetRent() []MovieWatchProviders200ApplicationJSONResultsNORent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsNZBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsNZBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsNZBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsNZBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsNZBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsNZBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsNZBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsNZFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsNZFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsNZFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsNZFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsNZFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsNZFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsNZFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsNZ struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsNZBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsNZFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsNZ) GetBuy() []MovieWatchProviders200ApplicationJSONResultsNZBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsNZ) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsNZFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsNZ) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsOMBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsOMBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsOMBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsOMFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsOMFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsOMFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsOMRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsOMRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsOMRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsOMRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsOM struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsOMBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsOMFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsOMRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsOM) GetBuy() []MovieWatchProviders200ApplicationJSONResultsOMBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsOM) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsOMFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsOM) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsOM) GetRent() []MovieWatchProviders200ApplicationJSONResultsOMRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsPAFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPAFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPAFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPAFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPAFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPAFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPAFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPA struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsPAFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsPA) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsPAFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsPA) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsPEBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPEBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPEBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPEBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPEBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPEBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPEBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPERent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPERent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPERent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPERent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPERent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPERent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPERent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPE struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsPEBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsPEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsPERent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsPE) GetBuy() []MovieWatchProviders200ApplicationJSONResultsPEBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsPE) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsPEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsPE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsPE) GetRent() []MovieWatchProviders200ApplicationJSONResultsPERent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsPHFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPHFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPHFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPHFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPHFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPHFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPHFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPH struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsPHFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsPH) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsPHFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsPH) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsPKFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPKFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPKFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPKFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPKFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPKFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPKFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPK struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsPKFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsPK) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsPKFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsPK) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsPLBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPLBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPLBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPLFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPLFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPLFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPLRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPLRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPLRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPLRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPL struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsPLBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsPLFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsPLRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsPL) GetBuy() []MovieWatchProviders200ApplicationJSONResultsPLBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsPL) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsPLFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsPL) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsPL) GetRent() []MovieWatchProviders200ApplicationJSONResultsPLRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsPSFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPSFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPSFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPSFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPSFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPSFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPSFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPS struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsPSFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsPS) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsPSFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsPS) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsPTBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPTBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPTBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPTFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPTFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPTFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPTRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPTRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPTRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPTRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPT struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsPTBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsPTFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsPTRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsPT) GetBuy() []MovieWatchProviders200ApplicationJSONResultsPTBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsPT) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsPTFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsPT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsPT) GetRent() []MovieWatchProviders200ApplicationJSONResultsPTRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsPYFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsPYFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsPYFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsPYFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsPYFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsPYFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsPYFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsPY struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsPYFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsPY) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsPYFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsPY) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsQABuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsQABuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsQABuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsQABuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsQABuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsQABuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsQABuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsQAFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsQAFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsQAFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsQAFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsQAFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsQAFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsQAFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsQA struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsQABuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsQAFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsQA) GetBuy() []MovieWatchProviders200ApplicationJSONResultsQABuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsQA) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsQAFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsQA) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsROFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsROFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsROFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsROFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsROFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsROFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsROFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsRO struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsROFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsRO) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsROFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsRO) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsRSBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsRSBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsRSBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsRSBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsRSBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsRSBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsRSBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsRSFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsRSFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsRSFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsRSFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsRSFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsRSFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsRSFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsRS struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsRSBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsRSFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsRS) GetBuy() []MovieWatchProviders200ApplicationJSONResultsRSBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsRS) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsRSFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsRS) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsRUBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsRUBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsRUBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsRUBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsRUBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsRUBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsRUBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsRUFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsRUFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsRUFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsRUFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsRUFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsRUFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsRUFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsRURent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsRURent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsRURent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsRURent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsRURent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsRURent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsRURent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsRU struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsRUBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsRUFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsRURent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsRU) GetBuy() []MovieWatchProviders200ApplicationJSONResultsRUBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsRU) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsRUFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsRU) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsRU) GetRent() []MovieWatchProviders200ApplicationJSONResultsRURent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsSABuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSABuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSABuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSABuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSABuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSABuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSABuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSAFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSAFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSAFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSAFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSAFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSAFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSAFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSARent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSARent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSARent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSARent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSARent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSARent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSARent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSA struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsSABuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsSAFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsSARent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsSA) GetBuy() []MovieWatchProviders200ApplicationJSONResultsSABuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsSA) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsSAFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsSA) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsSA) GetRent() []MovieWatchProviders200ApplicationJSONResultsSARent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsSEBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSEBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSEBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSEBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSEBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSEBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSEBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSERent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSERent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSERent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSERent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSERent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSERent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSERent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSE struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsSEBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsSEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsSERent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsSE) GetBuy() []MovieWatchProviders200ApplicationJSONResultsSEBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsSE) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsSEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsSE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsSE) GetRent() []MovieWatchProviders200ApplicationJSONResultsSERent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsSGFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSGFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSGFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSGFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSGFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSGFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSGFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSG struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsSGFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsSG) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsSGFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsSG) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsSIBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSIBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSIBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSIBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSIBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSIBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSIBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSIFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSIFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSIFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSIFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSIFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSIFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSIFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSI struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsSIBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsSIFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsSI) GetBuy() []MovieWatchProviders200ApplicationJSONResultsSIBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsSI) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsSIFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsSI) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsSKBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSKBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSKBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSKFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSKFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSKFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSKRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSKRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSKRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSKRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSK struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsSKBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsSKFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsSKRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsSK) GetBuy() []MovieWatchProviders200ApplicationJSONResultsSKBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsSK) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsSKFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsSK) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsSK) GetRent() []MovieWatchProviders200ApplicationJSONResultsSKRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsSMFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSMFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSMFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSMFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSMFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSMFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSMFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSM struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsSMFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsSM) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsSMFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsSM) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsSVFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsSVFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsSVFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsSVFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsSVFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsSVFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsSVFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsSV struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsSVFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsSV) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsSVFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsSV) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsTHFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsTHFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsTHFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsTHFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsTHFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsTHFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsTHFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsTH struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsTHFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsTH) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsTHFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsTH) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsTRBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsTRBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsTRBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsTRFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsTRFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsTRFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsTRRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsTRRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsTRRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsTRRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsTR struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsTRBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsTRFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsTRRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsTR) GetBuy() []MovieWatchProviders200ApplicationJSONResultsTRBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsTR) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsTRFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsTR) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsTR) GetRent() []MovieWatchProviders200ApplicationJSONResultsTRRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsTTFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsTTFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsTTFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsTTFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsTTFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsTTFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsTTFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsTT struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsTTFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsTT) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsTTFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsTT) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsTWFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsTWFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsTWFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsTWFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsTWFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsTWFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsTWFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsTW struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsTWFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsTW) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsTWFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsTW) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsUGBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsUGBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsUGBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsUGBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsUGBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsUGBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsUGBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsUGRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsUGRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsUGRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsUGRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsUGRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsUGRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsUGRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsUG struct {
	Buy  []MovieWatchProviders200ApplicationJSONResultsUGBuy  `json:"buy,omitempty"`
	Link *string                                              `json:"link,omitempty"`
	Rent []MovieWatchProviders200ApplicationJSONResultsUGRent `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsUG) GetBuy() []MovieWatchProviders200ApplicationJSONResultsUGBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsUG) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsUG) GetRent() []MovieWatchProviders200ApplicationJSONResultsUGRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsUSBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsUSBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsUSBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsUSFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsUSFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsUSFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsUSRent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsUSRent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsUSRent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSRent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSRent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSRent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsUSRent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsUS struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsUSBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsUSFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsUSRent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsUS) GetBuy() []MovieWatchProviders200ApplicationJSONResultsUSBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsUS) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsUSFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsUS) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsUS) GetRent() []MovieWatchProviders200ApplicationJSONResultsUSRent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsUYFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsUYFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsUYFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsUYFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsUYFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsUYFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsUYFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsUY struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsUYFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsUY) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsUYFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsUY) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsVEBuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsVEBuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsVEBuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsVEBuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsVEBuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsVEBuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsVEBuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsVEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsVEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsVEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsVEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsVEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsVEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsVEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsVERent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsVERent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsVERent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsVERent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsVERent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsVERent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsVERent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsVE struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsVEBuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsVEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsVERent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsVE) GetBuy() []MovieWatchProviders200ApplicationJSONResultsVEBuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsVE) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsVEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsVE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsVE) GetRent() []MovieWatchProviders200ApplicationJSONResultsVERent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResultsYEFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsYEFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsYEFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsYEFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsYEFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsYEFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsYEFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsYE struct {
	Flatrate []MovieWatchProviders200ApplicationJSONResultsYEFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsYE) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsYEFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsYE) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

type MovieWatchProviders200ApplicationJSONResultsZABuy struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsZABuy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsZABuy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsZABuy) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsZABuy) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsZABuy) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsZABuy) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsZAFlatrate struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsZAFlatrate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsZAFlatrate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsZAFlatrate) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsZAFlatrate) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsZAFlatrate) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsZAFlatrate) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsZARent struct {
	DisplayPriority *int64  `default:"0" json:"display_priority"`
	LogoPath        *string `json:"logo_path,omitempty"`
	ProviderID      *int64  `default:"0" json:"provider_id"`
	ProviderName    *string `json:"provider_name,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSONResultsZARent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSONResultsZARent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSONResultsZARent) GetDisplayPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.DisplayPriority
}

func (o *MovieWatchProviders200ApplicationJSONResultsZARent) GetLogoPath() *string {
	if o == nil {
		return nil
	}
	return o.LogoPath
}

func (o *MovieWatchProviders200ApplicationJSONResultsZARent) GetProviderID() *int64 {
	if o == nil {
		return nil
	}
	return o.ProviderID
}

func (o *MovieWatchProviders200ApplicationJSONResultsZARent) GetProviderName() *string {
	if o == nil {
		return nil
	}
	return o.ProviderName
}

type MovieWatchProviders200ApplicationJSONResultsZA struct {
	Buy      []MovieWatchProviders200ApplicationJSONResultsZABuy      `json:"buy,omitempty"`
	Flatrate []MovieWatchProviders200ApplicationJSONResultsZAFlatrate `json:"flatrate,omitempty"`
	Link     *string                                                  `json:"link,omitempty"`
	Rent     []MovieWatchProviders200ApplicationJSONResultsZARent     `json:"rent,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResultsZA) GetBuy() []MovieWatchProviders200ApplicationJSONResultsZABuy {
	if o == nil {
		return nil
	}
	return o.Buy
}

func (o *MovieWatchProviders200ApplicationJSONResultsZA) GetFlatrate() []MovieWatchProviders200ApplicationJSONResultsZAFlatrate {
	if o == nil {
		return nil
	}
	return o.Flatrate
}

func (o *MovieWatchProviders200ApplicationJSONResultsZA) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *MovieWatchProviders200ApplicationJSONResultsZA) GetRent() []MovieWatchProviders200ApplicationJSONResultsZARent {
	if o == nil {
		return nil
	}
	return o.Rent
}

type MovieWatchProviders200ApplicationJSONResults struct {
	Ae *MovieWatchProviders200ApplicationJSONResultsAE `json:"AE,omitempty"`
	Al *MovieWatchProviders200ApplicationJSONResultsAL `json:"AL,omitempty"`
	Ar *MovieWatchProviders200ApplicationJSONResultsAR `json:"AR,omitempty"`
	At *MovieWatchProviders200ApplicationJSONResultsAT `json:"AT,omitempty"`
	Au *MovieWatchProviders200ApplicationJSONResultsAU `json:"AU,omitempty"`
	Ba *MovieWatchProviders200ApplicationJSONResultsBA `json:"BA,omitempty"`
	Bb *MovieWatchProviders200ApplicationJSONResultsBB `json:"BB,omitempty"`
	Be *MovieWatchProviders200ApplicationJSONResultsBE `json:"BE,omitempty"`
	Bg *MovieWatchProviders200ApplicationJSONResultsBG `json:"BG,omitempty"`
	Bh *MovieWatchProviders200ApplicationJSONResultsBH `json:"BH,omitempty"`
	Bo *MovieWatchProviders200ApplicationJSONResultsBO `json:"BO,omitempty"`
	Br *MovieWatchProviders200ApplicationJSONResultsBR `json:"BR,omitempty"`
	Bs *MovieWatchProviders200ApplicationJSONResultsBS `json:"BS,omitempty"`
	Ca *MovieWatchProviders200ApplicationJSONResultsCA `json:"CA,omitempty"`
	Ch *MovieWatchProviders200ApplicationJSONResultsCH `json:"CH,omitempty"`
	Cl *MovieWatchProviders200ApplicationJSONResultsCL `json:"CL,omitempty"`
	Co *MovieWatchProviders200ApplicationJSONResultsCO `json:"CO,omitempty"`
	Cr *MovieWatchProviders200ApplicationJSONResultsCR `json:"CR,omitempty"`
	Cv *MovieWatchProviders200ApplicationJSONResultsCV `json:"CV,omitempty"`
	Cz *MovieWatchProviders200ApplicationJSONResultsCZ `json:"CZ,omitempty"`
	De *MovieWatchProviders200ApplicationJSONResultsDE `json:"DE,omitempty"`
	Dk *MovieWatchProviders200ApplicationJSONResultsDK `json:"DK,omitempty"`
	Do *MovieWatchProviders200ApplicationJSONResultsDO `json:"DO,omitempty"`
	Ec *MovieWatchProviders200ApplicationJSONResultsEC `json:"EC,omitempty"`
	Ee *MovieWatchProviders200ApplicationJSONResultsEE `json:"EE,omitempty"`
	Eg *MovieWatchProviders200ApplicationJSONResultsEG `json:"EG,omitempty"`
	Es *MovieWatchProviders200ApplicationJSONResultsES `json:"ES,omitempty"`
	Fi *MovieWatchProviders200ApplicationJSONResultsFI `json:"FI,omitempty"`
	Fj *MovieWatchProviders200ApplicationJSONResultsFJ `json:"FJ,omitempty"`
	Fr *MovieWatchProviders200ApplicationJSONResultsFR `json:"FR,omitempty"`
	Gb *MovieWatchProviders200ApplicationJSONResultsGB `json:"GB,omitempty"`
	Gf *MovieWatchProviders200ApplicationJSONResultsGF `json:"GF,omitempty"`
	Gi *MovieWatchProviders200ApplicationJSONResultsGI `json:"GI,omitempty"`
	Gr *MovieWatchProviders200ApplicationJSONResultsGR `json:"GR,omitempty"`
	Gt *MovieWatchProviders200ApplicationJSONResultsGT `json:"GT,omitempty"`
	Hk *MovieWatchProviders200ApplicationJSONResultsHK `json:"HK,omitempty"`
	Hn *MovieWatchProviders200ApplicationJSONResultsHN `json:"HN,omitempty"`
	Hr *MovieWatchProviders200ApplicationJSONResultsHR `json:"HR,omitempty"`
	Hu *MovieWatchProviders200ApplicationJSONResultsHU `json:"HU,omitempty"`
	ID *MovieWatchProviders200ApplicationJSONResultsID `json:"ID,omitempty"`
	Ie *MovieWatchProviders200ApplicationJSONResultsIE `json:"IE,omitempty"`
	Il *MovieWatchProviders200ApplicationJSONResultsIL `json:"IL,omitempty"`
	In *MovieWatchProviders200ApplicationJSONResultsIN `json:"IN,omitempty"`
	Iq *MovieWatchProviders200ApplicationJSONResultsIQ `json:"IQ,omitempty"`
	Is *MovieWatchProviders200ApplicationJSONResultsIS `json:"IS,omitempty"`
	It *MovieWatchProviders200ApplicationJSONResultsIT `json:"IT,omitempty"`
	Jm *MovieWatchProviders200ApplicationJSONResultsJM `json:"JM,omitempty"`
	Jo *MovieWatchProviders200ApplicationJSONResultsJO `json:"JO,omitempty"`
	Jp *MovieWatchProviders200ApplicationJSONResultsJP `json:"JP,omitempty"`
	Kr *MovieWatchProviders200ApplicationJSONResultsKR `json:"KR,omitempty"`
	Kw *MovieWatchProviders200ApplicationJSONResultsKW `json:"KW,omitempty"`
	Lb *MovieWatchProviders200ApplicationJSONResultsLB `json:"LB,omitempty"`
	Li *MovieWatchProviders200ApplicationJSONResultsLI `json:"LI,omitempty"`
	Lt *MovieWatchProviders200ApplicationJSONResultsLT `json:"LT,omitempty"`
	Lv *MovieWatchProviders200ApplicationJSONResultsLV `json:"LV,omitempty"`
	Md *MovieWatchProviders200ApplicationJSONResultsMD `json:"MD,omitempty"`
	Mk *MovieWatchProviders200ApplicationJSONResultsMK `json:"MK,omitempty"`
	Mt *MovieWatchProviders200ApplicationJSONResultsMT `json:"MT,omitempty"`
	Mu *MovieWatchProviders200ApplicationJSONResultsMU `json:"MU,omitempty"`
	Mx *MovieWatchProviders200ApplicationJSONResultsMX `json:"MX,omitempty"`
	My *MovieWatchProviders200ApplicationJSONResultsMY `json:"MY,omitempty"`
	Mz *MovieWatchProviders200ApplicationJSONResultsMZ `json:"MZ,omitempty"`
	Nl *MovieWatchProviders200ApplicationJSONResultsNL `json:"NL,omitempty"`
	No *MovieWatchProviders200ApplicationJSONResultsNO `json:"NO,omitempty"`
	Nz *MovieWatchProviders200ApplicationJSONResultsNZ `json:"NZ,omitempty"`
	Om *MovieWatchProviders200ApplicationJSONResultsOM `json:"OM,omitempty"`
	Pa *MovieWatchProviders200ApplicationJSONResultsPA `json:"PA,omitempty"`
	Pe *MovieWatchProviders200ApplicationJSONResultsPE `json:"PE,omitempty"`
	Ph *MovieWatchProviders200ApplicationJSONResultsPH `json:"PH,omitempty"`
	Pk *MovieWatchProviders200ApplicationJSONResultsPK `json:"PK,omitempty"`
	Pl *MovieWatchProviders200ApplicationJSONResultsPL `json:"PL,omitempty"`
	Ps *MovieWatchProviders200ApplicationJSONResultsPS `json:"PS,omitempty"`
	Pt *MovieWatchProviders200ApplicationJSONResultsPT `json:"PT,omitempty"`
	Py *MovieWatchProviders200ApplicationJSONResultsPY `json:"PY,omitempty"`
	Qa *MovieWatchProviders200ApplicationJSONResultsQA `json:"QA,omitempty"`
	Ro *MovieWatchProviders200ApplicationJSONResultsRO `json:"RO,omitempty"`
	Rs *MovieWatchProviders200ApplicationJSONResultsRS `json:"RS,omitempty"`
	Ru *MovieWatchProviders200ApplicationJSONResultsRU `json:"RU,omitempty"`
	Sa *MovieWatchProviders200ApplicationJSONResultsSA `json:"SA,omitempty"`
	Se *MovieWatchProviders200ApplicationJSONResultsSE `json:"SE,omitempty"`
	Sg *MovieWatchProviders200ApplicationJSONResultsSG `json:"SG,omitempty"`
	Si *MovieWatchProviders200ApplicationJSONResultsSI `json:"SI,omitempty"`
	Sk *MovieWatchProviders200ApplicationJSONResultsSK `json:"SK,omitempty"`
	Sm *MovieWatchProviders200ApplicationJSONResultsSM `json:"SM,omitempty"`
	Sv *MovieWatchProviders200ApplicationJSONResultsSV `json:"SV,omitempty"`
	Th *MovieWatchProviders200ApplicationJSONResultsTH `json:"TH,omitempty"`
	Tr *MovieWatchProviders200ApplicationJSONResultsTR `json:"TR,omitempty"`
	Tt *MovieWatchProviders200ApplicationJSONResultsTT `json:"TT,omitempty"`
	Tw *MovieWatchProviders200ApplicationJSONResultsTW `json:"TW,omitempty"`
	Ug *MovieWatchProviders200ApplicationJSONResultsUG `json:"UG,omitempty"`
	Us *MovieWatchProviders200ApplicationJSONResultsUS `json:"US,omitempty"`
	Uy *MovieWatchProviders200ApplicationJSONResultsUY `json:"UY,omitempty"`
	Ve *MovieWatchProviders200ApplicationJSONResultsVE `json:"VE,omitempty"`
	Ye *MovieWatchProviders200ApplicationJSONResultsYE `json:"YE,omitempty"`
	Za *MovieWatchProviders200ApplicationJSONResultsZA `json:"ZA,omitempty"`
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetAe() *MovieWatchProviders200ApplicationJSONResultsAE {
	if o == nil {
		return nil
	}
	return o.Ae
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetAl() *MovieWatchProviders200ApplicationJSONResultsAL {
	if o == nil {
		return nil
	}
	return o.Al
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetAr() *MovieWatchProviders200ApplicationJSONResultsAR {
	if o == nil {
		return nil
	}
	return o.Ar
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetAt() *MovieWatchProviders200ApplicationJSONResultsAT {
	if o == nil {
		return nil
	}
	return o.At
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetAu() *MovieWatchProviders200ApplicationJSONResultsAU {
	if o == nil {
		return nil
	}
	return o.Au
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetBa() *MovieWatchProviders200ApplicationJSONResultsBA {
	if o == nil {
		return nil
	}
	return o.Ba
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetBb() *MovieWatchProviders200ApplicationJSONResultsBB {
	if o == nil {
		return nil
	}
	return o.Bb
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetBe() *MovieWatchProviders200ApplicationJSONResultsBE {
	if o == nil {
		return nil
	}
	return o.Be
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetBg() *MovieWatchProviders200ApplicationJSONResultsBG {
	if o == nil {
		return nil
	}
	return o.Bg
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetBh() *MovieWatchProviders200ApplicationJSONResultsBH {
	if o == nil {
		return nil
	}
	return o.Bh
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetBo() *MovieWatchProviders200ApplicationJSONResultsBO {
	if o == nil {
		return nil
	}
	return o.Bo
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetBr() *MovieWatchProviders200ApplicationJSONResultsBR {
	if o == nil {
		return nil
	}
	return o.Br
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetBs() *MovieWatchProviders200ApplicationJSONResultsBS {
	if o == nil {
		return nil
	}
	return o.Bs
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetCa() *MovieWatchProviders200ApplicationJSONResultsCA {
	if o == nil {
		return nil
	}
	return o.Ca
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetCh() *MovieWatchProviders200ApplicationJSONResultsCH {
	if o == nil {
		return nil
	}
	return o.Ch
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetCl() *MovieWatchProviders200ApplicationJSONResultsCL {
	if o == nil {
		return nil
	}
	return o.Cl
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetCo() *MovieWatchProviders200ApplicationJSONResultsCO {
	if o == nil {
		return nil
	}
	return o.Co
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetCr() *MovieWatchProviders200ApplicationJSONResultsCR {
	if o == nil {
		return nil
	}
	return o.Cr
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetCv() *MovieWatchProviders200ApplicationJSONResultsCV {
	if o == nil {
		return nil
	}
	return o.Cv
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetCz() *MovieWatchProviders200ApplicationJSONResultsCZ {
	if o == nil {
		return nil
	}
	return o.Cz
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetDe() *MovieWatchProviders200ApplicationJSONResultsDE {
	if o == nil {
		return nil
	}
	return o.De
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetDk() *MovieWatchProviders200ApplicationJSONResultsDK {
	if o == nil {
		return nil
	}
	return o.Dk
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetDo() *MovieWatchProviders200ApplicationJSONResultsDO {
	if o == nil {
		return nil
	}
	return o.Do
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetEc() *MovieWatchProviders200ApplicationJSONResultsEC {
	if o == nil {
		return nil
	}
	return o.Ec
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetEe() *MovieWatchProviders200ApplicationJSONResultsEE {
	if o == nil {
		return nil
	}
	return o.Ee
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetEg() *MovieWatchProviders200ApplicationJSONResultsEG {
	if o == nil {
		return nil
	}
	return o.Eg
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetEs() *MovieWatchProviders200ApplicationJSONResultsES {
	if o == nil {
		return nil
	}
	return o.Es
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetFi() *MovieWatchProviders200ApplicationJSONResultsFI {
	if o == nil {
		return nil
	}
	return o.Fi
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetFj() *MovieWatchProviders200ApplicationJSONResultsFJ {
	if o == nil {
		return nil
	}
	return o.Fj
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetFr() *MovieWatchProviders200ApplicationJSONResultsFR {
	if o == nil {
		return nil
	}
	return o.Fr
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetGb() *MovieWatchProviders200ApplicationJSONResultsGB {
	if o == nil {
		return nil
	}
	return o.Gb
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetGf() *MovieWatchProviders200ApplicationJSONResultsGF {
	if o == nil {
		return nil
	}
	return o.Gf
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetGi() *MovieWatchProviders200ApplicationJSONResultsGI {
	if o == nil {
		return nil
	}
	return o.Gi
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetGr() *MovieWatchProviders200ApplicationJSONResultsGR {
	if o == nil {
		return nil
	}
	return o.Gr
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetGt() *MovieWatchProviders200ApplicationJSONResultsGT {
	if o == nil {
		return nil
	}
	return o.Gt
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetHk() *MovieWatchProviders200ApplicationJSONResultsHK {
	if o == nil {
		return nil
	}
	return o.Hk
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetHn() *MovieWatchProviders200ApplicationJSONResultsHN {
	if o == nil {
		return nil
	}
	return o.Hn
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetHr() *MovieWatchProviders200ApplicationJSONResultsHR {
	if o == nil {
		return nil
	}
	return o.Hr
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetHu() *MovieWatchProviders200ApplicationJSONResultsHU {
	if o == nil {
		return nil
	}
	return o.Hu
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetID() *MovieWatchProviders200ApplicationJSONResultsID {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetIe() *MovieWatchProviders200ApplicationJSONResultsIE {
	if o == nil {
		return nil
	}
	return o.Ie
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetIl() *MovieWatchProviders200ApplicationJSONResultsIL {
	if o == nil {
		return nil
	}
	return o.Il
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetIn() *MovieWatchProviders200ApplicationJSONResultsIN {
	if o == nil {
		return nil
	}
	return o.In
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetIq() *MovieWatchProviders200ApplicationJSONResultsIQ {
	if o == nil {
		return nil
	}
	return o.Iq
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetIs() *MovieWatchProviders200ApplicationJSONResultsIS {
	if o == nil {
		return nil
	}
	return o.Is
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetIt() *MovieWatchProviders200ApplicationJSONResultsIT {
	if o == nil {
		return nil
	}
	return o.It
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetJm() *MovieWatchProviders200ApplicationJSONResultsJM {
	if o == nil {
		return nil
	}
	return o.Jm
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetJo() *MovieWatchProviders200ApplicationJSONResultsJO {
	if o == nil {
		return nil
	}
	return o.Jo
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetJp() *MovieWatchProviders200ApplicationJSONResultsJP {
	if o == nil {
		return nil
	}
	return o.Jp
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetKr() *MovieWatchProviders200ApplicationJSONResultsKR {
	if o == nil {
		return nil
	}
	return o.Kr
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetKw() *MovieWatchProviders200ApplicationJSONResultsKW {
	if o == nil {
		return nil
	}
	return o.Kw
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetLb() *MovieWatchProviders200ApplicationJSONResultsLB {
	if o == nil {
		return nil
	}
	return o.Lb
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetLi() *MovieWatchProviders200ApplicationJSONResultsLI {
	if o == nil {
		return nil
	}
	return o.Li
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetLt() *MovieWatchProviders200ApplicationJSONResultsLT {
	if o == nil {
		return nil
	}
	return o.Lt
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetLv() *MovieWatchProviders200ApplicationJSONResultsLV {
	if o == nil {
		return nil
	}
	return o.Lv
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetMd() *MovieWatchProviders200ApplicationJSONResultsMD {
	if o == nil {
		return nil
	}
	return o.Md
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetMk() *MovieWatchProviders200ApplicationJSONResultsMK {
	if o == nil {
		return nil
	}
	return o.Mk
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetMt() *MovieWatchProviders200ApplicationJSONResultsMT {
	if o == nil {
		return nil
	}
	return o.Mt
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetMu() *MovieWatchProviders200ApplicationJSONResultsMU {
	if o == nil {
		return nil
	}
	return o.Mu
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetMx() *MovieWatchProviders200ApplicationJSONResultsMX {
	if o == nil {
		return nil
	}
	return o.Mx
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetMy() *MovieWatchProviders200ApplicationJSONResultsMY {
	if o == nil {
		return nil
	}
	return o.My
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetMz() *MovieWatchProviders200ApplicationJSONResultsMZ {
	if o == nil {
		return nil
	}
	return o.Mz
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetNl() *MovieWatchProviders200ApplicationJSONResultsNL {
	if o == nil {
		return nil
	}
	return o.Nl
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetNo() *MovieWatchProviders200ApplicationJSONResultsNO {
	if o == nil {
		return nil
	}
	return o.No
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetNz() *MovieWatchProviders200ApplicationJSONResultsNZ {
	if o == nil {
		return nil
	}
	return o.Nz
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetOm() *MovieWatchProviders200ApplicationJSONResultsOM {
	if o == nil {
		return nil
	}
	return o.Om
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetPa() *MovieWatchProviders200ApplicationJSONResultsPA {
	if o == nil {
		return nil
	}
	return o.Pa
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetPe() *MovieWatchProviders200ApplicationJSONResultsPE {
	if o == nil {
		return nil
	}
	return o.Pe
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetPh() *MovieWatchProviders200ApplicationJSONResultsPH {
	if o == nil {
		return nil
	}
	return o.Ph
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetPk() *MovieWatchProviders200ApplicationJSONResultsPK {
	if o == nil {
		return nil
	}
	return o.Pk
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetPl() *MovieWatchProviders200ApplicationJSONResultsPL {
	if o == nil {
		return nil
	}
	return o.Pl
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetPs() *MovieWatchProviders200ApplicationJSONResultsPS {
	if o == nil {
		return nil
	}
	return o.Ps
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetPt() *MovieWatchProviders200ApplicationJSONResultsPT {
	if o == nil {
		return nil
	}
	return o.Pt
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetPy() *MovieWatchProviders200ApplicationJSONResultsPY {
	if o == nil {
		return nil
	}
	return o.Py
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetQa() *MovieWatchProviders200ApplicationJSONResultsQA {
	if o == nil {
		return nil
	}
	return o.Qa
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetRo() *MovieWatchProviders200ApplicationJSONResultsRO {
	if o == nil {
		return nil
	}
	return o.Ro
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetRs() *MovieWatchProviders200ApplicationJSONResultsRS {
	if o == nil {
		return nil
	}
	return o.Rs
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetRu() *MovieWatchProviders200ApplicationJSONResultsRU {
	if o == nil {
		return nil
	}
	return o.Ru
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetSa() *MovieWatchProviders200ApplicationJSONResultsSA {
	if o == nil {
		return nil
	}
	return o.Sa
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetSe() *MovieWatchProviders200ApplicationJSONResultsSE {
	if o == nil {
		return nil
	}
	return o.Se
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetSg() *MovieWatchProviders200ApplicationJSONResultsSG {
	if o == nil {
		return nil
	}
	return o.Sg
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetSi() *MovieWatchProviders200ApplicationJSONResultsSI {
	if o == nil {
		return nil
	}
	return o.Si
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetSk() *MovieWatchProviders200ApplicationJSONResultsSK {
	if o == nil {
		return nil
	}
	return o.Sk
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetSm() *MovieWatchProviders200ApplicationJSONResultsSM {
	if o == nil {
		return nil
	}
	return o.Sm
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetSv() *MovieWatchProviders200ApplicationJSONResultsSV {
	if o == nil {
		return nil
	}
	return o.Sv
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetTh() *MovieWatchProviders200ApplicationJSONResultsTH {
	if o == nil {
		return nil
	}
	return o.Th
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetTr() *MovieWatchProviders200ApplicationJSONResultsTR {
	if o == nil {
		return nil
	}
	return o.Tr
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetTt() *MovieWatchProviders200ApplicationJSONResultsTT {
	if o == nil {
		return nil
	}
	return o.Tt
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetTw() *MovieWatchProviders200ApplicationJSONResultsTW {
	if o == nil {
		return nil
	}
	return o.Tw
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetUg() *MovieWatchProviders200ApplicationJSONResultsUG {
	if o == nil {
		return nil
	}
	return o.Ug
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetUs() *MovieWatchProviders200ApplicationJSONResultsUS {
	if o == nil {
		return nil
	}
	return o.Us
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetUy() *MovieWatchProviders200ApplicationJSONResultsUY {
	if o == nil {
		return nil
	}
	return o.Uy
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetVe() *MovieWatchProviders200ApplicationJSONResultsVE {
	if o == nil {
		return nil
	}
	return o.Ve
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetYe() *MovieWatchProviders200ApplicationJSONResultsYE {
	if o == nil {
		return nil
	}
	return o.Ye
}

func (o *MovieWatchProviders200ApplicationJSONResults) GetZa() *MovieWatchProviders200ApplicationJSONResultsZA {
	if o == nil {
		return nil
	}
	return o.Za
}

// MovieWatchProviders200ApplicationJSON - 200
type MovieWatchProviders200ApplicationJSON struct {
	ID      *int64                                        `default:"0" json:"id"`
	Results *MovieWatchProviders200ApplicationJSONResults `json:"results,omitempty"`
}

func (m MovieWatchProviders200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieWatchProviders200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieWatchProviders200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MovieWatchProviders200ApplicationJSON) GetResults() *MovieWatchProviders200ApplicationJSONResults {
	if o == nil {
		return nil
	}
	return o.Results
}

type MovieWatchProvidersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	MovieWatchProviders200ApplicationJSONObject *MovieWatchProviders200ApplicationJSON
}

func (o *MovieWatchProvidersResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *MovieWatchProvidersResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *MovieWatchProvidersResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *MovieWatchProvidersResponse) GetMovieWatchProviders200ApplicationJSONObject() *MovieWatchProviders200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.MovieWatchProviders200ApplicationJSONObject
}
