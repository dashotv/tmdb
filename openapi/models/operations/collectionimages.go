// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type CollectionImagesRequest struct {
	CollectionID int `pathParam:"style=simple,explode=false,name=collection_id"`
	// specify a comma separated list of ISO-639-1 values to query, for example: `en,null`
	IncludeImageLanguage *string `queryParam:"style=form,explode=true,name=include_image_language"`
	Language             *string `queryParam:"style=form,explode=true,name=language"`
}

func (o *CollectionImagesRequest) GetCollectionID() int {
	if o == nil {
		return 0
	}
	return o.CollectionID
}

func (o *CollectionImagesRequest) GetIncludeImageLanguage() *string {
	if o == nil {
		return nil
	}
	return o.IncludeImageLanguage
}

func (o *CollectionImagesRequest) GetLanguage() *string {
	if o == nil {
		return nil
	}
	return o.Language
}

type CollectionImages200ApplicationJSONBackdrops struct {
	AspectRatio *float64    `default:"0" json:"aspect_ratio"`
	FilePath    *string     `json:"file_path,omitempty"`
	Height      *int64      `default:"0" json:"height"`
	Iso6391     interface{} `json:"iso_639_1,omitempty"`
	VoteAverage *float64    `default:"0" json:"vote_average"`
	VoteCount   *int64      `default:"0" json:"vote_count"`
	Width       *int64      `default:"0" json:"width"`
}

func (c CollectionImages200ApplicationJSONBackdrops) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CollectionImages200ApplicationJSONBackdrops) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CollectionImages200ApplicationJSONBackdrops) GetAspectRatio() *float64 {
	if o == nil {
		return nil
	}
	return o.AspectRatio
}

func (o *CollectionImages200ApplicationJSONBackdrops) GetFilePath() *string {
	if o == nil {
		return nil
	}
	return o.FilePath
}

func (o *CollectionImages200ApplicationJSONBackdrops) GetHeight() *int64 {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *CollectionImages200ApplicationJSONBackdrops) GetIso6391() interface{} {
	if o == nil {
		return nil
	}
	return o.Iso6391
}

func (o *CollectionImages200ApplicationJSONBackdrops) GetVoteAverage() *float64 {
	if o == nil {
		return nil
	}
	return o.VoteAverage
}

func (o *CollectionImages200ApplicationJSONBackdrops) GetVoteCount() *int64 {
	if o == nil {
		return nil
	}
	return o.VoteCount
}

func (o *CollectionImages200ApplicationJSONBackdrops) GetWidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Width
}

type CollectionImages200ApplicationJSONPosters struct {
	AspectRatio *float64 `default:"0" json:"aspect_ratio"`
	FilePath    *string  `json:"file_path,omitempty"`
	Height      *int64   `default:"0" json:"height"`
	Iso6391     *string  `json:"iso_639_1,omitempty"`
	VoteAverage *float64 `default:"0" json:"vote_average"`
	VoteCount   *int64   `default:"0" json:"vote_count"`
	Width       *int64   `default:"0" json:"width"`
}

func (c CollectionImages200ApplicationJSONPosters) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CollectionImages200ApplicationJSONPosters) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CollectionImages200ApplicationJSONPosters) GetAspectRatio() *float64 {
	if o == nil {
		return nil
	}
	return o.AspectRatio
}

func (o *CollectionImages200ApplicationJSONPosters) GetFilePath() *string {
	if o == nil {
		return nil
	}
	return o.FilePath
}

func (o *CollectionImages200ApplicationJSONPosters) GetHeight() *int64 {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *CollectionImages200ApplicationJSONPosters) GetIso6391() *string {
	if o == nil {
		return nil
	}
	return o.Iso6391
}

func (o *CollectionImages200ApplicationJSONPosters) GetVoteAverage() *float64 {
	if o == nil {
		return nil
	}
	return o.VoteAverage
}

func (o *CollectionImages200ApplicationJSONPosters) GetVoteCount() *int64 {
	if o == nil {
		return nil
	}
	return o.VoteCount
}

func (o *CollectionImages200ApplicationJSONPosters) GetWidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Width
}

// CollectionImages200ApplicationJSON - 200
type CollectionImages200ApplicationJSON struct {
	Backdrops []CollectionImages200ApplicationJSONBackdrops `json:"backdrops,omitempty"`
	ID        *int64                                        `default:"0" json:"id"`
	Posters   []CollectionImages200ApplicationJSONPosters   `json:"posters,omitempty"`
}

func (c CollectionImages200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CollectionImages200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CollectionImages200ApplicationJSON) GetBackdrops() []CollectionImages200ApplicationJSONBackdrops {
	if o == nil {
		return nil
	}
	return o.Backdrops
}

func (o *CollectionImages200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CollectionImages200ApplicationJSON) GetPosters() []CollectionImages200ApplicationJSONPosters {
	if o == nil {
		return nil
	}
	return o.Posters
}

type CollectionImagesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	CollectionImages200ApplicationJSONObject *CollectionImages200ApplicationJSON
}

func (o *CollectionImagesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CollectionImagesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CollectionImagesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CollectionImagesResponse) GetCollectionImages200ApplicationJSONObject() *CollectionImages200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.CollectionImages200ApplicationJSONObject
}
