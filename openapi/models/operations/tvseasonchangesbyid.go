// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type TvSeasonChangesByIDRequest struct {
	SeasonID  int     `pathParam:"style=simple,explode=false,name=season_id"`
	EndDate   *string `queryParam:"style=form,explode=true,name=end_date"`
	Page      *int    `default:"1" queryParam:"style=form,explode=true,name=page"`
	StartDate *string `queryParam:"style=form,explode=true,name=start_date"`
}

func (t TvSeasonChangesByIDRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeasonChangesByIDRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeasonChangesByIDRequest) GetSeasonID() int {
	if o == nil {
		return 0
	}
	return o.SeasonID
}

func (o *TvSeasonChangesByIDRequest) GetEndDate() *string {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *TvSeasonChangesByIDRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *TvSeasonChangesByIDRequest) GetStartDate() *string {
	if o == nil {
		return nil
	}
	return o.StartDate
}

type TvSeasonChangesByID200ApplicationJSONChangesItemsValue struct {
	EpisodeID     *int64 `default:"0" json:"episode_id"`
	EpisodeNumber *int64 `default:"0" json:"episode_number"`
}

func (t TvSeasonChangesByID200ApplicationJSONChangesItemsValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeasonChangesByID200ApplicationJSONChangesItemsValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeasonChangesByID200ApplicationJSONChangesItemsValue) GetEpisodeID() *int64 {
	if o == nil {
		return nil
	}
	return o.EpisodeID
}

func (o *TvSeasonChangesByID200ApplicationJSONChangesItemsValue) GetEpisodeNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.EpisodeNumber
}

type TvSeasonChangesByID200ApplicationJSONChangesItems struct {
	Action *string                                                 `json:"action,omitempty"`
	ID     *string                                                 `json:"id,omitempty"`
	Time   *string                                                 `json:"time,omitempty"`
	Value  *TvSeasonChangesByID200ApplicationJSONChangesItemsValue `json:"value,omitempty"`
}

func (o *TvSeasonChangesByID200ApplicationJSONChangesItems) GetAction() *string {
	if o == nil {
		return nil
	}
	return o.Action
}

func (o *TvSeasonChangesByID200ApplicationJSONChangesItems) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeasonChangesByID200ApplicationJSONChangesItems) GetTime() *string {
	if o == nil {
		return nil
	}
	return o.Time
}

func (o *TvSeasonChangesByID200ApplicationJSONChangesItems) GetValue() *TvSeasonChangesByID200ApplicationJSONChangesItemsValue {
	if o == nil {
		return nil
	}
	return o.Value
}

type TvSeasonChangesByID200ApplicationJSONChanges struct {
	Items []TvSeasonChangesByID200ApplicationJSONChangesItems `json:"items,omitempty"`
	Key   *string                                             `json:"key,omitempty"`
}

func (o *TvSeasonChangesByID200ApplicationJSONChanges) GetItems() []TvSeasonChangesByID200ApplicationJSONChangesItems {
	if o == nil {
		return nil
	}
	return o.Items
}

func (o *TvSeasonChangesByID200ApplicationJSONChanges) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

// TvSeasonChangesByID200ApplicationJSON - 200
type TvSeasonChangesByID200ApplicationJSON struct {
	Changes []TvSeasonChangesByID200ApplicationJSONChanges `json:"changes,omitempty"`
}

func (o *TvSeasonChangesByID200ApplicationJSON) GetChanges() []TvSeasonChangesByID200ApplicationJSONChanges {
	if o == nil {
		return nil
	}
	return o.Changes
}

type TvSeasonChangesByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	TvSeasonChangesByID200ApplicationJSONObject *TvSeasonChangesByID200ApplicationJSON
}

func (o *TvSeasonChangesByIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TvSeasonChangesByIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TvSeasonChangesByIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TvSeasonChangesByIDResponse) GetTvSeasonChangesByID200ApplicationJSONObject() *TvSeasonChangesByID200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.TvSeasonChangesByID200ApplicationJSONObject
}
