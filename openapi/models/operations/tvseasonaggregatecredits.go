// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type TvSeasonAggregateCreditsRequest struct {
	SeasonNumber int     `pathParam:"style=simple,explode=false,name=season_number"`
	SeriesID     int     `pathParam:"style=simple,explode=false,name=series_id"`
	Language     *string `default:"en-US" queryParam:"style=form,explode=true,name=language"`
}

func (t TvSeasonAggregateCreditsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeasonAggregateCreditsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeasonAggregateCreditsRequest) GetSeasonNumber() int {
	if o == nil {
		return 0
	}
	return o.SeasonNumber
}

func (o *TvSeasonAggregateCreditsRequest) GetSeriesID() int {
	if o == nil {
		return 0
	}
	return o.SeriesID
}

func (o *TvSeasonAggregateCreditsRequest) GetLanguage() *string {
	if o == nil {
		return nil
	}
	return o.Language
}

type TvSeasonAggregateCredits200ApplicationJSONCastRoles struct {
	Character    *string `json:"character,omitempty"`
	CreditID     *string `json:"credit_id,omitempty"`
	EpisodeCount *int64  `default:"0" json:"episode_count"`
}

func (t TvSeasonAggregateCredits200ApplicationJSONCastRoles) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeasonAggregateCredits200ApplicationJSONCastRoles) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCastRoles) GetCharacter() *string {
	if o == nil {
		return nil
	}
	return o.Character
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCastRoles) GetCreditID() *string {
	if o == nil {
		return nil
	}
	return o.CreditID
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCastRoles) GetEpisodeCount() *int64 {
	if o == nil {
		return nil
	}
	return o.EpisodeCount
}

type TvSeasonAggregateCredits200ApplicationJSONCast struct {
	Adult              *bool                                                 `default:"true" json:"adult"`
	Gender             *int64                                                `default:"0" json:"gender"`
	ID                 *int64                                                `default:"0" json:"id"`
	KnownForDepartment *string                                               `json:"known_for_department,omitempty"`
	Name               *string                                               `json:"name,omitempty"`
	Order              *int64                                                `default:"0" json:"order"`
	OriginalName       *string                                               `json:"original_name,omitempty"`
	Popularity         *float64                                              `default:"0" json:"popularity"`
	ProfilePath        *string                                               `json:"profile_path,omitempty"`
	Roles              []TvSeasonAggregateCredits200ApplicationJSONCastRoles `json:"roles,omitempty"`
	TotalEpisodeCount  *int64                                                `default:"0" json:"total_episode_count"`
}

func (t TvSeasonAggregateCredits200ApplicationJSONCast) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeasonAggregateCredits200ApplicationJSONCast) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCast) GetAdult() *bool {
	if o == nil {
		return nil
	}
	return o.Adult
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCast) GetGender() *int64 {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCast) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCast) GetKnownForDepartment() *string {
	if o == nil {
		return nil
	}
	return o.KnownForDepartment
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCast) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCast) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCast) GetOriginalName() *string {
	if o == nil {
		return nil
	}
	return o.OriginalName
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCast) GetPopularity() *float64 {
	if o == nil {
		return nil
	}
	return o.Popularity
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCast) GetProfilePath() *string {
	if o == nil {
		return nil
	}
	return o.ProfilePath
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCast) GetRoles() []TvSeasonAggregateCredits200ApplicationJSONCastRoles {
	if o == nil {
		return nil
	}
	return o.Roles
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCast) GetTotalEpisodeCount() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalEpisodeCount
}

type TvSeasonAggregateCredits200ApplicationJSONCrewJobs struct {
	CreditID     *string `json:"credit_id,omitempty"`
	EpisodeCount *int64  `default:"0" json:"episode_count"`
	Job          *string `json:"job,omitempty"`
}

func (t TvSeasonAggregateCredits200ApplicationJSONCrewJobs) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeasonAggregateCredits200ApplicationJSONCrewJobs) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrewJobs) GetCreditID() *string {
	if o == nil {
		return nil
	}
	return o.CreditID
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrewJobs) GetEpisodeCount() *int64 {
	if o == nil {
		return nil
	}
	return o.EpisodeCount
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrewJobs) GetJob() *string {
	if o == nil {
		return nil
	}
	return o.Job
}

type TvSeasonAggregateCredits200ApplicationJSONCrew struct {
	Adult              *bool                                                `default:"true" json:"adult"`
	Department         *string                                              `json:"department,omitempty"`
	Gender             *int64                                               `default:"0" json:"gender"`
	ID                 *int64                                               `default:"0" json:"id"`
	Jobs               []TvSeasonAggregateCredits200ApplicationJSONCrewJobs `json:"jobs,omitempty"`
	KnownForDepartment *string                                              `json:"known_for_department,omitempty"`
	Name               *string                                              `json:"name,omitempty"`
	OriginalName       *string                                              `json:"original_name,omitempty"`
	Popularity         *float64                                             `default:"0" json:"popularity"`
	ProfilePath        interface{}                                          `json:"profile_path,omitempty"`
	TotalEpisodeCount  *int64                                               `default:"0" json:"total_episode_count"`
}

func (t TvSeasonAggregateCredits200ApplicationJSONCrew) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeasonAggregateCredits200ApplicationJSONCrew) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrew) GetAdult() *bool {
	if o == nil {
		return nil
	}
	return o.Adult
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrew) GetDepartment() *string {
	if o == nil {
		return nil
	}
	return o.Department
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrew) GetGender() *int64 {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrew) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrew) GetJobs() []TvSeasonAggregateCredits200ApplicationJSONCrewJobs {
	if o == nil {
		return nil
	}
	return o.Jobs
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrew) GetKnownForDepartment() *string {
	if o == nil {
		return nil
	}
	return o.KnownForDepartment
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrew) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrew) GetOriginalName() *string {
	if o == nil {
		return nil
	}
	return o.OriginalName
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrew) GetPopularity() *float64 {
	if o == nil {
		return nil
	}
	return o.Popularity
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrew) GetProfilePath() interface{} {
	if o == nil {
		return nil
	}
	return o.ProfilePath
}

func (o *TvSeasonAggregateCredits200ApplicationJSONCrew) GetTotalEpisodeCount() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalEpisodeCount
}

// TvSeasonAggregateCredits200ApplicationJSON - 200
type TvSeasonAggregateCredits200ApplicationJSON struct {
	Cast []TvSeasonAggregateCredits200ApplicationJSONCast `json:"cast,omitempty"`
	Crew []TvSeasonAggregateCredits200ApplicationJSONCrew `json:"crew,omitempty"`
	ID   *int64                                           `default:"0" json:"id"`
}

func (t TvSeasonAggregateCredits200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeasonAggregateCredits200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeasonAggregateCredits200ApplicationJSON) GetCast() []TvSeasonAggregateCredits200ApplicationJSONCast {
	if o == nil {
		return nil
	}
	return o.Cast
}

func (o *TvSeasonAggregateCredits200ApplicationJSON) GetCrew() []TvSeasonAggregateCredits200ApplicationJSONCrew {
	if o == nil {
		return nil
	}
	return o.Crew
}

func (o *TvSeasonAggregateCredits200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

type TvSeasonAggregateCreditsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	TvSeasonAggregateCredits200ApplicationJSONObject *TvSeasonAggregateCredits200ApplicationJSON
}

func (o *TvSeasonAggregateCreditsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TvSeasonAggregateCreditsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TvSeasonAggregateCreditsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TvSeasonAggregateCreditsResponse) GetTvSeasonAggregateCredits200ApplicationJSONObject() *TvSeasonAggregateCredits200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.TvSeasonAggregateCredits200ApplicationJSONObject
}
