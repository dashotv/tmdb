// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type CompanyAlternativeNamesRequest struct {
	CompanyID int `pathParam:"style=simple,explode=false,name=company_id"`
}

func (o *CompanyAlternativeNamesRequest) GetCompanyID() int {
	if o == nil {
		return 0
	}
	return o.CompanyID
}

type CompanyAlternativeNames200ApplicationJSONResults struct {
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
}

func (o *CompanyAlternativeNames200ApplicationJSONResults) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CompanyAlternativeNames200ApplicationJSONResults) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

// CompanyAlternativeNames200ApplicationJSON - 200
type CompanyAlternativeNames200ApplicationJSON struct {
	ID      *int64                                             `default:"0" json:"id"`
	Results []CompanyAlternativeNames200ApplicationJSONResults `json:"results,omitempty"`
}

func (c CompanyAlternativeNames200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CompanyAlternativeNames200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CompanyAlternativeNames200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CompanyAlternativeNames200ApplicationJSON) GetResults() []CompanyAlternativeNames200ApplicationJSONResults {
	if o == nil {
		return nil
	}
	return o.Results
}

type CompanyAlternativeNamesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	CompanyAlternativeNames200ApplicationJSONObject *CompanyAlternativeNames200ApplicationJSON
}

func (o *CompanyAlternativeNamesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CompanyAlternativeNamesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CompanyAlternativeNamesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CompanyAlternativeNamesResponse) GetCompanyAlternativeNames200ApplicationJSONObject() *CompanyAlternativeNames200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.CompanyAlternativeNames200ApplicationJSONObject
}
