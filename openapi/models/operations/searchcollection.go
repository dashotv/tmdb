// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type SearchCollectionRequest struct {
	IncludeAdult *bool   `default:"false" queryParam:"style=form,explode=true,name=include_adult"`
	Language     *string `default:"en-US" queryParam:"style=form,explode=true,name=language"`
	Page         *int    `default:"1" queryParam:"style=form,explode=true,name=page"`
	Query        string  `queryParam:"style=form,explode=true,name=query"`
	Region       *string `queryParam:"style=form,explode=true,name=region"`
}

func (s SearchCollectionRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SearchCollectionRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SearchCollectionRequest) GetIncludeAdult() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeAdult
}

func (o *SearchCollectionRequest) GetLanguage() *string {
	if o == nil {
		return nil
	}
	return o.Language
}

func (o *SearchCollectionRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *SearchCollectionRequest) GetQuery() string {
	if o == nil {
		return ""
	}
	return o.Query
}

func (o *SearchCollectionRequest) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

type SearchCollection200ApplicationJSONResults struct {
	Adult            *bool   `default:"true" json:"adult"`
	BackdropPath     *string `json:"backdrop_path,omitempty"`
	ID               *int64  `default:"0" json:"id"`
	Name             *string `json:"name,omitempty"`
	OriginalLanguage *string `json:"original_language,omitempty"`
	OriginalName     *string `json:"original_name,omitempty"`
	Overview         *string `json:"overview,omitempty"`
	PosterPath       *string `json:"poster_path,omitempty"`
}

func (s SearchCollection200ApplicationJSONResults) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SearchCollection200ApplicationJSONResults) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SearchCollection200ApplicationJSONResults) GetAdult() *bool {
	if o == nil {
		return nil
	}
	return o.Adult
}

func (o *SearchCollection200ApplicationJSONResults) GetBackdropPath() *string {
	if o == nil {
		return nil
	}
	return o.BackdropPath
}

func (o *SearchCollection200ApplicationJSONResults) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *SearchCollection200ApplicationJSONResults) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *SearchCollection200ApplicationJSONResults) GetOriginalLanguage() *string {
	if o == nil {
		return nil
	}
	return o.OriginalLanguage
}

func (o *SearchCollection200ApplicationJSONResults) GetOriginalName() *string {
	if o == nil {
		return nil
	}
	return o.OriginalName
}

func (o *SearchCollection200ApplicationJSONResults) GetOverview() *string {
	if o == nil {
		return nil
	}
	return o.Overview
}

func (o *SearchCollection200ApplicationJSONResults) GetPosterPath() *string {
	if o == nil {
		return nil
	}
	return o.PosterPath
}

// SearchCollection200ApplicationJSON - 200
type SearchCollection200ApplicationJSON struct {
	Page         *int64                                      `default:"0" json:"page"`
	Results      []SearchCollection200ApplicationJSONResults `json:"results,omitempty"`
	TotalPages   *int64                                      `default:"0" json:"total_pages"`
	TotalResults *int64                                      `default:"0" json:"total_results"`
}

func (s SearchCollection200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SearchCollection200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SearchCollection200ApplicationJSON) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *SearchCollection200ApplicationJSON) GetResults() []SearchCollection200ApplicationJSONResults {
	if o == nil {
		return nil
	}
	return o.Results
}

func (o *SearchCollection200ApplicationJSON) GetTotalPages() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalPages
}

func (o *SearchCollection200ApplicationJSON) GetTotalResults() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalResults
}

type SearchCollectionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	SearchCollection200ApplicationJSONObject *SearchCollection200ApplicationJSON
}

func (o *SearchCollectionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *SearchCollectionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *SearchCollectionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *SearchCollectionResponse) GetSearchCollection200ApplicationJSONObject() *SearchCollection200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.SearchCollection200ApplicationJSONObject
}
