// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type TvSeriesKeywordsRequest struct {
	SeriesID int `pathParam:"style=simple,explode=false,name=series_id"`
}

func (o *TvSeriesKeywordsRequest) GetSeriesID() int {
	if o == nil {
		return 0
	}
	return o.SeriesID
}

type TvSeriesKeywords200ApplicationJSONResults struct {
	ID   *int64  `default:"0" json:"id"`
	Name *string `json:"name,omitempty"`
}

func (t TvSeriesKeywords200ApplicationJSONResults) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesKeywords200ApplicationJSONResults) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesKeywords200ApplicationJSONResults) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeriesKeywords200ApplicationJSONResults) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// TvSeriesKeywords200ApplicationJSON - 200
type TvSeriesKeywords200ApplicationJSON struct {
	ID      *int64                                      `default:"0" json:"id"`
	Results []TvSeriesKeywords200ApplicationJSONResults `json:"results,omitempty"`
}

func (t TvSeriesKeywords200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TvSeriesKeywords200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TvSeriesKeywords200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TvSeriesKeywords200ApplicationJSON) GetResults() []TvSeriesKeywords200ApplicationJSONResults {
	if o == nil {
		return nil
	}
	return o.Results
}

type TvSeriesKeywordsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	TvSeriesKeywords200ApplicationJSONObject *TvSeriesKeywords200ApplicationJSON
}

func (o *TvSeriesKeywordsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TvSeriesKeywordsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TvSeriesKeywordsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TvSeriesKeywordsResponse) GetTvSeriesKeywords200ApplicationJSONObject() *TvSeriesKeywords200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.TvSeriesKeywords200ApplicationJSONObject
}
