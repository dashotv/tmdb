// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type MovieImagesRequest struct {
	MovieID int `pathParam:"style=simple,explode=false,name=movie_id"`
	// specify a comma separated list of ISO-639-1 values to query, for example: `en,null`
	IncludeImageLanguage *string `queryParam:"style=form,explode=true,name=include_image_language"`
	Language             *string `queryParam:"style=form,explode=true,name=language"`
}

func (o *MovieImagesRequest) GetMovieID() int {
	if o == nil {
		return 0
	}
	return o.MovieID
}

func (o *MovieImagesRequest) GetIncludeImageLanguage() *string {
	if o == nil {
		return nil
	}
	return o.IncludeImageLanguage
}

func (o *MovieImagesRequest) GetLanguage() *string {
	if o == nil {
		return nil
	}
	return o.Language
}

type MovieImages200ApplicationJSONBackdrops struct {
	AspectRatio *float64    `default:"0" json:"aspect_ratio"`
	FilePath    *string     `json:"file_path,omitempty"`
	Height      *int64      `default:"0" json:"height"`
	Iso6391     interface{} `json:"iso_639_1,omitempty"`
	VoteAverage *float64    `default:"0" json:"vote_average"`
	VoteCount   *int64      `default:"0" json:"vote_count"`
	Width       *int64      `default:"0" json:"width"`
}

func (m MovieImages200ApplicationJSONBackdrops) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieImages200ApplicationJSONBackdrops) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieImages200ApplicationJSONBackdrops) GetAspectRatio() *float64 {
	if o == nil {
		return nil
	}
	return o.AspectRatio
}

func (o *MovieImages200ApplicationJSONBackdrops) GetFilePath() *string {
	if o == nil {
		return nil
	}
	return o.FilePath
}

func (o *MovieImages200ApplicationJSONBackdrops) GetHeight() *int64 {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *MovieImages200ApplicationJSONBackdrops) GetIso6391() interface{} {
	if o == nil {
		return nil
	}
	return o.Iso6391
}

func (o *MovieImages200ApplicationJSONBackdrops) GetVoteAverage() *float64 {
	if o == nil {
		return nil
	}
	return o.VoteAverage
}

func (o *MovieImages200ApplicationJSONBackdrops) GetVoteCount() *int64 {
	if o == nil {
		return nil
	}
	return o.VoteCount
}

func (o *MovieImages200ApplicationJSONBackdrops) GetWidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Width
}

type MovieImages200ApplicationJSONLogos struct {
	AspectRatio *float64 `default:"0" json:"aspect_ratio"`
	FilePath    *string  `json:"file_path,omitempty"`
	Height      *int64   `default:"0" json:"height"`
	Iso6391     *string  `json:"iso_639_1,omitempty"`
	VoteAverage *float64 `default:"0" json:"vote_average"`
	VoteCount   *int64   `default:"0" json:"vote_count"`
	Width       *int64   `default:"0" json:"width"`
}

func (m MovieImages200ApplicationJSONLogos) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieImages200ApplicationJSONLogos) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieImages200ApplicationJSONLogos) GetAspectRatio() *float64 {
	if o == nil {
		return nil
	}
	return o.AspectRatio
}

func (o *MovieImages200ApplicationJSONLogos) GetFilePath() *string {
	if o == nil {
		return nil
	}
	return o.FilePath
}

func (o *MovieImages200ApplicationJSONLogos) GetHeight() *int64 {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *MovieImages200ApplicationJSONLogos) GetIso6391() *string {
	if o == nil {
		return nil
	}
	return o.Iso6391
}

func (o *MovieImages200ApplicationJSONLogos) GetVoteAverage() *float64 {
	if o == nil {
		return nil
	}
	return o.VoteAverage
}

func (o *MovieImages200ApplicationJSONLogos) GetVoteCount() *int64 {
	if o == nil {
		return nil
	}
	return o.VoteCount
}

func (o *MovieImages200ApplicationJSONLogos) GetWidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Width
}

type MovieImages200ApplicationJSONPosters struct {
	AspectRatio *float64 `default:"0" json:"aspect_ratio"`
	FilePath    *string  `json:"file_path,omitempty"`
	Height      *int64   `default:"0" json:"height"`
	Iso6391     *string  `json:"iso_639_1,omitempty"`
	VoteAverage *float64 `default:"0" json:"vote_average"`
	VoteCount   *int64   `default:"0" json:"vote_count"`
	Width       *int64   `default:"0" json:"width"`
}

func (m MovieImages200ApplicationJSONPosters) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieImages200ApplicationJSONPosters) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieImages200ApplicationJSONPosters) GetAspectRatio() *float64 {
	if o == nil {
		return nil
	}
	return o.AspectRatio
}

func (o *MovieImages200ApplicationJSONPosters) GetFilePath() *string {
	if o == nil {
		return nil
	}
	return o.FilePath
}

func (o *MovieImages200ApplicationJSONPosters) GetHeight() *int64 {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *MovieImages200ApplicationJSONPosters) GetIso6391() *string {
	if o == nil {
		return nil
	}
	return o.Iso6391
}

func (o *MovieImages200ApplicationJSONPosters) GetVoteAverage() *float64 {
	if o == nil {
		return nil
	}
	return o.VoteAverage
}

func (o *MovieImages200ApplicationJSONPosters) GetVoteCount() *int64 {
	if o == nil {
		return nil
	}
	return o.VoteCount
}

func (o *MovieImages200ApplicationJSONPosters) GetWidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Width
}

// MovieImages200ApplicationJSON - 200
type MovieImages200ApplicationJSON struct {
	Backdrops []MovieImages200ApplicationJSONBackdrops `json:"backdrops,omitempty"`
	ID        *int64                                   `default:"0" json:"id"`
	Logos     []MovieImages200ApplicationJSONLogos     `json:"logos,omitempty"`
	Posters   []MovieImages200ApplicationJSONPosters   `json:"posters,omitempty"`
}

func (m MovieImages200ApplicationJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MovieImages200ApplicationJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MovieImages200ApplicationJSON) GetBackdrops() []MovieImages200ApplicationJSONBackdrops {
	if o == nil {
		return nil
	}
	return o.Backdrops
}

func (o *MovieImages200ApplicationJSON) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MovieImages200ApplicationJSON) GetLogos() []MovieImages200ApplicationJSONLogos {
	if o == nil {
		return nil
	}
	return o.Logos
}

func (o *MovieImages200ApplicationJSON) GetPosters() []MovieImages200ApplicationJSONPosters {
	if o == nil {
		return nil
	}
	return o.Posters
}

type MovieImagesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	MovieImages200ApplicationJSONObject *MovieImages200ApplicationJSON
}

func (o *MovieImagesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *MovieImagesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *MovieImagesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *MovieImagesResponse) GetMovieImages200ApplicationJSONObject() *MovieImages200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.MovieImages200ApplicationJSONObject
}
