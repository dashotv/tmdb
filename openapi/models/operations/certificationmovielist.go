// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/dashotv/tmdb/openapi/utils"
	"net/http"
)

type CertificationMovieList200ApplicationJSONCertificationsAR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsAR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsAR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsAR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsAR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsAR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsAU struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsAU) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsAU) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsAU) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsAU) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsAU) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsBG struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsBG) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsBG) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsBG) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsBG) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsBG) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsBR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsBR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsBR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsBR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsBR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsBR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsCA struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsCA) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsCA) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsCA) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsCA) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsCA) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsCAQC struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsCAQC) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsCAQC) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsCAQC) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsCAQC) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsCAQC) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsCH struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsCH) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsCH) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsCH) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsCH) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsCH) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsDE struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsDE) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsDE) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsDE) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsDE) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsDE) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsDK struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsDK) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsDK) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsDK) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsDK) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsDK) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsES struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsES) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsES) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsES) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsES) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsES) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsFI struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsFI) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsFI) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsFI) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsFI) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsFI) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsFR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsFR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsFR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsFR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsFR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsFR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsGB struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsGB) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsGB) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsGB) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsGB) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsGB) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsGR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsGR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsGR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsGR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsGR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsGR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsHK struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsHK) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsHK) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsHK) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsHK) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsHK) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsHU struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsHU) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsHU) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsHU) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsHU) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsHU) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsID struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsID) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsID) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsID) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsID) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsID) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsIE struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsIE) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsIE) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIE) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIE) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIE) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsIL struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsIL) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsIL) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIL) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIL) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIL) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsIN struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsIN) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsIN) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIN) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIN) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIN) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsIT struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsIT) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsIT) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIT) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIT) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsIT) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsJP struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsJP) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsJP) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsJP) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsJP) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsJP) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsKR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsKR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsKR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsKR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsKR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsKR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsLT struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsLT) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsLT) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsLT) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsLT) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsLT) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsLU struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsLU) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsLU) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsLU) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsLU) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsLU) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsLV struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsLV) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsLV) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsLV) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsLV) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsLV) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsMO struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsMO) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsMO) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsMO) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsMO) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsMO) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsMX struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsMX) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsMX) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsMX) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsMX) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsMX) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsMY struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsMY) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsMY) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsMY) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsMY) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsMY) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsNL struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsNL) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsNL) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsNL) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsNL) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsNL) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsNO struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsNO) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsNO) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsNO) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsNO) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsNO) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsNZ struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsNZ) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsNZ) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsNZ) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsNZ) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsNZ) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsPH struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsPH) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsPH) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsPH) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsPH) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsPH) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsPR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsPR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsPR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsPR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsPR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsPR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsPT struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsPT) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsPT) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsPT) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsPT) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsPT) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsRU struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsRU) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsRU) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsRU) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsRU) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsRU) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsSE struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsSE) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsSE) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsSE) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsSE) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsSE) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsSG struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsSG) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsSG) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsSG) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsSG) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsSG) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsSK struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsSK) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsSK) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsSK) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsSK) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsSK) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsTH struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsTH) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsTH) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsTH) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsTH) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsTH) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsTR struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsTR) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsTR) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsTR) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsTR) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsTR) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsTW struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsTW) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsTW) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsTW) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsTW) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsTW) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsUS struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsUS) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsUS) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsUS) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsUS) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsUS) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsVI struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsVI) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsVI) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsVI) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsVI) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsVI) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertificationsZA struct {
	Certification *string `json:"certification,omitempty"`
	Meaning       *string `json:"meaning,omitempty"`
	Order         *int64  `default:"0" json:"order"`
}

func (c CertificationMovieList200ApplicationJSONCertificationsZA) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CertificationMovieList200ApplicationJSONCertificationsZA) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CertificationMovieList200ApplicationJSONCertificationsZA) GetCertification() *string {
	if o == nil {
		return nil
	}
	return o.Certification
}

func (o *CertificationMovieList200ApplicationJSONCertificationsZA) GetMeaning() *string {
	if o == nil {
		return nil
	}
	return o.Meaning
}

func (o *CertificationMovieList200ApplicationJSONCertificationsZA) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

type CertificationMovieList200ApplicationJSONCertifications struct {
	Ar   []CertificationMovieList200ApplicationJSONCertificationsAR   `json:"AR,omitempty"`
	Au   []CertificationMovieList200ApplicationJSONCertificationsAU   `json:"AU,omitempty"`
	Bg   []CertificationMovieList200ApplicationJSONCertificationsBG   `json:"BG,omitempty"`
	Br   []CertificationMovieList200ApplicationJSONCertificationsBR   `json:"BR,omitempty"`
	Ca   []CertificationMovieList200ApplicationJSONCertificationsCA   `json:"CA,omitempty"`
	CaQc []CertificationMovieList200ApplicationJSONCertificationsCAQC `json:"CA-QC,omitempty"`
	Ch   []CertificationMovieList200ApplicationJSONCertificationsCH   `json:"CH,omitempty"`
	De   []CertificationMovieList200ApplicationJSONCertificationsDE   `json:"DE,omitempty"`
	Dk   []CertificationMovieList200ApplicationJSONCertificationsDK   `json:"DK,omitempty"`
	Es   []CertificationMovieList200ApplicationJSONCertificationsES   `json:"ES,omitempty"`
	Fi   []CertificationMovieList200ApplicationJSONCertificationsFI   `json:"FI,omitempty"`
	Fr   []CertificationMovieList200ApplicationJSONCertificationsFR   `json:"FR,omitempty"`
	Gb   []CertificationMovieList200ApplicationJSONCertificationsGB   `json:"GB,omitempty"`
	Gr   []CertificationMovieList200ApplicationJSONCertificationsGR   `json:"GR,omitempty"`
	Hk   []CertificationMovieList200ApplicationJSONCertificationsHK   `json:"HK,omitempty"`
	Hu   []CertificationMovieList200ApplicationJSONCertificationsHU   `json:"HU,omitempty"`
	ID   []CertificationMovieList200ApplicationJSONCertificationsID   `json:"ID,omitempty"`
	Ie   []CertificationMovieList200ApplicationJSONCertificationsIE   `json:"IE,omitempty"`
	Il   []CertificationMovieList200ApplicationJSONCertificationsIL   `json:"IL,omitempty"`
	In   []CertificationMovieList200ApplicationJSONCertificationsIN   `json:"IN,omitempty"`
	It   []CertificationMovieList200ApplicationJSONCertificationsIT   `json:"IT,omitempty"`
	Jp   []CertificationMovieList200ApplicationJSONCertificationsJP   `json:"JP,omitempty"`
	Kr   []CertificationMovieList200ApplicationJSONCertificationsKR   `json:"KR,omitempty"`
	Lt   []CertificationMovieList200ApplicationJSONCertificationsLT   `json:"LT,omitempty"`
	Lu   []CertificationMovieList200ApplicationJSONCertificationsLU   `json:"LU,omitempty"`
	Lv   []CertificationMovieList200ApplicationJSONCertificationsLV   `json:"LV,omitempty"`
	Mo   []CertificationMovieList200ApplicationJSONCertificationsMO   `json:"MO,omitempty"`
	Mx   []CertificationMovieList200ApplicationJSONCertificationsMX   `json:"MX,omitempty"`
	My   []CertificationMovieList200ApplicationJSONCertificationsMY   `json:"MY,omitempty"`
	Nl   []CertificationMovieList200ApplicationJSONCertificationsNL   `json:"NL,omitempty"`
	No   []CertificationMovieList200ApplicationJSONCertificationsNO   `json:"NO,omitempty"`
	Nz   []CertificationMovieList200ApplicationJSONCertificationsNZ   `json:"NZ,omitempty"`
	Ph   []CertificationMovieList200ApplicationJSONCertificationsPH   `json:"PH,omitempty"`
	Pr   []CertificationMovieList200ApplicationJSONCertificationsPR   `json:"PR,omitempty"`
	Pt   []CertificationMovieList200ApplicationJSONCertificationsPT   `json:"PT,omitempty"`
	Ru   []CertificationMovieList200ApplicationJSONCertificationsRU   `json:"RU,omitempty"`
	Se   []CertificationMovieList200ApplicationJSONCertificationsSE   `json:"SE,omitempty"`
	Sg   []CertificationMovieList200ApplicationJSONCertificationsSG   `json:"SG,omitempty"`
	Sk   []CertificationMovieList200ApplicationJSONCertificationsSK   `json:"SK,omitempty"`
	Th   []CertificationMovieList200ApplicationJSONCertificationsTH   `json:"TH,omitempty"`
	Tr   []CertificationMovieList200ApplicationJSONCertificationsTR   `json:"TR,omitempty"`
	Tw   []CertificationMovieList200ApplicationJSONCertificationsTW   `json:"TW,omitempty"`
	Us   []CertificationMovieList200ApplicationJSONCertificationsUS   `json:"US,omitempty"`
	Vi   []CertificationMovieList200ApplicationJSONCertificationsVI   `json:"VI,omitempty"`
	Za   []CertificationMovieList200ApplicationJSONCertificationsZA   `json:"ZA,omitempty"`
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetAr() []CertificationMovieList200ApplicationJSONCertificationsAR {
	if o == nil {
		return nil
	}
	return o.Ar
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetAu() []CertificationMovieList200ApplicationJSONCertificationsAU {
	if o == nil {
		return nil
	}
	return o.Au
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetBg() []CertificationMovieList200ApplicationJSONCertificationsBG {
	if o == nil {
		return nil
	}
	return o.Bg
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetBr() []CertificationMovieList200ApplicationJSONCertificationsBR {
	if o == nil {
		return nil
	}
	return o.Br
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetCa() []CertificationMovieList200ApplicationJSONCertificationsCA {
	if o == nil {
		return nil
	}
	return o.Ca
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetCaQc() []CertificationMovieList200ApplicationJSONCertificationsCAQC {
	if o == nil {
		return nil
	}
	return o.CaQc
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetCh() []CertificationMovieList200ApplicationJSONCertificationsCH {
	if o == nil {
		return nil
	}
	return o.Ch
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetDe() []CertificationMovieList200ApplicationJSONCertificationsDE {
	if o == nil {
		return nil
	}
	return o.De
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetDk() []CertificationMovieList200ApplicationJSONCertificationsDK {
	if o == nil {
		return nil
	}
	return o.Dk
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetEs() []CertificationMovieList200ApplicationJSONCertificationsES {
	if o == nil {
		return nil
	}
	return o.Es
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetFi() []CertificationMovieList200ApplicationJSONCertificationsFI {
	if o == nil {
		return nil
	}
	return o.Fi
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetFr() []CertificationMovieList200ApplicationJSONCertificationsFR {
	if o == nil {
		return nil
	}
	return o.Fr
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetGb() []CertificationMovieList200ApplicationJSONCertificationsGB {
	if o == nil {
		return nil
	}
	return o.Gb
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetGr() []CertificationMovieList200ApplicationJSONCertificationsGR {
	if o == nil {
		return nil
	}
	return o.Gr
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetHk() []CertificationMovieList200ApplicationJSONCertificationsHK {
	if o == nil {
		return nil
	}
	return o.Hk
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetHu() []CertificationMovieList200ApplicationJSONCertificationsHU {
	if o == nil {
		return nil
	}
	return o.Hu
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetID() []CertificationMovieList200ApplicationJSONCertificationsID {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetIe() []CertificationMovieList200ApplicationJSONCertificationsIE {
	if o == nil {
		return nil
	}
	return o.Ie
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetIl() []CertificationMovieList200ApplicationJSONCertificationsIL {
	if o == nil {
		return nil
	}
	return o.Il
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetIn() []CertificationMovieList200ApplicationJSONCertificationsIN {
	if o == nil {
		return nil
	}
	return o.In
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetIt() []CertificationMovieList200ApplicationJSONCertificationsIT {
	if o == nil {
		return nil
	}
	return o.It
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetJp() []CertificationMovieList200ApplicationJSONCertificationsJP {
	if o == nil {
		return nil
	}
	return o.Jp
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetKr() []CertificationMovieList200ApplicationJSONCertificationsKR {
	if o == nil {
		return nil
	}
	return o.Kr
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetLt() []CertificationMovieList200ApplicationJSONCertificationsLT {
	if o == nil {
		return nil
	}
	return o.Lt
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetLu() []CertificationMovieList200ApplicationJSONCertificationsLU {
	if o == nil {
		return nil
	}
	return o.Lu
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetLv() []CertificationMovieList200ApplicationJSONCertificationsLV {
	if o == nil {
		return nil
	}
	return o.Lv
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetMo() []CertificationMovieList200ApplicationJSONCertificationsMO {
	if o == nil {
		return nil
	}
	return o.Mo
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetMx() []CertificationMovieList200ApplicationJSONCertificationsMX {
	if o == nil {
		return nil
	}
	return o.Mx
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetMy() []CertificationMovieList200ApplicationJSONCertificationsMY {
	if o == nil {
		return nil
	}
	return o.My
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetNl() []CertificationMovieList200ApplicationJSONCertificationsNL {
	if o == nil {
		return nil
	}
	return o.Nl
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetNo() []CertificationMovieList200ApplicationJSONCertificationsNO {
	if o == nil {
		return nil
	}
	return o.No
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetNz() []CertificationMovieList200ApplicationJSONCertificationsNZ {
	if o == nil {
		return nil
	}
	return o.Nz
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetPh() []CertificationMovieList200ApplicationJSONCertificationsPH {
	if o == nil {
		return nil
	}
	return o.Ph
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetPr() []CertificationMovieList200ApplicationJSONCertificationsPR {
	if o == nil {
		return nil
	}
	return o.Pr
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetPt() []CertificationMovieList200ApplicationJSONCertificationsPT {
	if o == nil {
		return nil
	}
	return o.Pt
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetRu() []CertificationMovieList200ApplicationJSONCertificationsRU {
	if o == nil {
		return nil
	}
	return o.Ru
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetSe() []CertificationMovieList200ApplicationJSONCertificationsSE {
	if o == nil {
		return nil
	}
	return o.Se
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetSg() []CertificationMovieList200ApplicationJSONCertificationsSG {
	if o == nil {
		return nil
	}
	return o.Sg
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetSk() []CertificationMovieList200ApplicationJSONCertificationsSK {
	if o == nil {
		return nil
	}
	return o.Sk
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetTh() []CertificationMovieList200ApplicationJSONCertificationsTH {
	if o == nil {
		return nil
	}
	return o.Th
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetTr() []CertificationMovieList200ApplicationJSONCertificationsTR {
	if o == nil {
		return nil
	}
	return o.Tr
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetTw() []CertificationMovieList200ApplicationJSONCertificationsTW {
	if o == nil {
		return nil
	}
	return o.Tw
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetUs() []CertificationMovieList200ApplicationJSONCertificationsUS {
	if o == nil {
		return nil
	}
	return o.Us
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetVi() []CertificationMovieList200ApplicationJSONCertificationsVI {
	if o == nil {
		return nil
	}
	return o.Vi
}

func (o *CertificationMovieList200ApplicationJSONCertifications) GetZa() []CertificationMovieList200ApplicationJSONCertificationsZA {
	if o == nil {
		return nil
	}
	return o.Za
}

// CertificationMovieList200ApplicationJSON - 200
type CertificationMovieList200ApplicationJSON struct {
	Certifications *CertificationMovieList200ApplicationJSONCertifications `json:"certifications,omitempty"`
}

func (o *CertificationMovieList200ApplicationJSON) GetCertifications() *CertificationMovieList200ApplicationJSONCertifications {
	if o == nil {
		return nil
	}
	return o.Certifications
}

type CertificationMovieListResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// 200
	CertificationMovieList200ApplicationJSONObject *CertificationMovieList200ApplicationJSON
}

func (o *CertificationMovieListResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CertificationMovieListResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CertificationMovieListResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CertificationMovieListResponse) GetCertificationMovieList200ApplicationJSONObject() *CertificationMovieList200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.CertificationMovieList200ApplicationJSONObject
}
